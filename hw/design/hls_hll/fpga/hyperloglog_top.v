// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hyperloglog_top_hyperloglog_top,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=1.825000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=94,HLS_SYN_DSP=0,HLS_SYN_FF=58807,HLS_SYN_LUT=41029,HLS_VERSION=2020_2}" *)

module hyperloglog_top (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 64;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 64;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (64 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire   [63:0] input_s;
wire   [63:0] N_s;
wire    gmem_AWREADY;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [511:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    bll_input_U0_ap_start;
wire    bll_input_U0_ap_done;
wire    bll_input_U0_ap_continue;
wire    bll_input_U0_ap_idle;
wire    bll_input_U0_ap_ready;
wire    bll_input_U0_start_out;
wire    bll_input_U0_start_write;
wire    bll_input_U0_m_axi_gmem_AWVALID;
wire   [63:0] bll_input_U0_m_axi_gmem_AWADDR;
wire   [0:0] bll_input_U0_m_axi_gmem_AWID;
wire   [31:0] bll_input_U0_m_axi_gmem_AWLEN;
wire   [2:0] bll_input_U0_m_axi_gmem_AWSIZE;
wire   [1:0] bll_input_U0_m_axi_gmem_AWBURST;
wire   [1:0] bll_input_U0_m_axi_gmem_AWLOCK;
wire   [3:0] bll_input_U0_m_axi_gmem_AWCACHE;
wire   [2:0] bll_input_U0_m_axi_gmem_AWPROT;
wire   [3:0] bll_input_U0_m_axi_gmem_AWQOS;
wire   [3:0] bll_input_U0_m_axi_gmem_AWREGION;
wire   [0:0] bll_input_U0_m_axi_gmem_AWUSER;
wire    bll_input_U0_m_axi_gmem_WVALID;
wire   [511:0] bll_input_U0_m_axi_gmem_WDATA;
wire   [63:0] bll_input_U0_m_axi_gmem_WSTRB;
wire    bll_input_U0_m_axi_gmem_WLAST;
wire   [0:0] bll_input_U0_m_axi_gmem_WID;
wire   [0:0] bll_input_U0_m_axi_gmem_WUSER;
wire    bll_input_U0_m_axi_gmem_ARVALID;
wire   [63:0] bll_input_U0_m_axi_gmem_ARADDR;
wire   [0:0] bll_input_U0_m_axi_gmem_ARID;
wire   [31:0] bll_input_U0_m_axi_gmem_ARLEN;
wire   [2:0] bll_input_U0_m_axi_gmem_ARSIZE;
wire   [1:0] bll_input_U0_m_axi_gmem_ARBURST;
wire   [1:0] bll_input_U0_m_axi_gmem_ARLOCK;
wire   [3:0] bll_input_U0_m_axi_gmem_ARCACHE;
wire   [2:0] bll_input_U0_m_axi_gmem_ARPROT;
wire   [3:0] bll_input_U0_m_axi_gmem_ARQOS;
wire   [3:0] bll_input_U0_m_axi_gmem_ARREGION;
wire   [0:0] bll_input_U0_m_axi_gmem_ARUSER;
wire    bll_input_U0_m_axi_gmem_RREADY;
wire    bll_input_U0_m_axi_gmem_BREADY;
wire   [1023:0] bll_input_U0_s_axis_input_tuple_din;
wire    bll_input_U0_s_axis_input_tuple_write;
wire   [63:0] bll_input_U0_N_out_din;
wire    bll_input_U0_N_out_write;
wire    bll_U0_ap_start;
wire    bll_U0_ap_done;
wire    bll_U0_ap_continue;
wire    bll_U0_ap_idle;
wire    bll_U0_ap_ready;
wire    bll_U0_start_out;
wire    bll_U0_start_write;
wire    bll_U0_s_axis_input_tuple_read;
wire   [63:0] bll_U0_m_axis_write_data_din;
wire    bll_U0_m_axis_write_data_write;
wire    bll_U0_N_s_read;
wire    bll_output_U0_ap_start;
wire    bll_output_U0_ap_done;
wire    bll_output_U0_ap_continue;
wire    bll_output_U0_ap_idle;
wire    bll_output_U0_ap_ready;
wire    bll_output_U0_m_axis_write_data_read;
wire   [31:0] bll_output_U0_ap_return;
wire    ap_sync_continue;
wire    s_axis_input_tuple_full_n;
wire   [1023:0] s_axis_input_tuple_dout;
wire    s_axis_input_tuple_empty_n;
wire    N_c_full_n;
wire   [63:0] N_c_dout;
wire    N_c_empty_n;
wire    m_axis_write_data_full_n;
wire   [63:0] m_axis_write_data_dout;
wire    m_axis_write_data_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_bll_U0_din;
wire    start_for_bll_U0_full_n;
wire   [0:0] start_for_bll_U0_dout;
wire    start_for_bll_U0_empty_n;
wire   [0:0] start_for_bll_output_U0_din;
wire    start_for_bll_output_U0_full_n;
wire   [0:0] start_for_bll_output_U0_dout;
wire    start_for_bll_output_U0_empty_n;
wire    bll_output_U0_start_full_n;
wire    bll_output_U0_start_write;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
end

hyperloglog_top_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle),
    .ap_return(bll_output_U0_ap_return),
    .input_s(input_s),
    .N_s(N_s)
);

hyperloglog_top_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 8 ),
    .NUM_WRITE_OUTSTANDING( 1 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 2 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(bll_input_U0_m_axi_gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(bll_input_U0_m_axi_gmem_ARADDR),
    .I_ARID(bll_input_U0_m_axi_gmem_ARID),
    .I_ARLEN(bll_input_U0_m_axi_gmem_ARLEN),
    .I_ARSIZE(bll_input_U0_m_axi_gmem_ARSIZE),
    .I_ARLOCK(bll_input_U0_m_axi_gmem_ARLOCK),
    .I_ARCACHE(bll_input_U0_m_axi_gmem_ARCACHE),
    .I_ARQOS(bll_input_U0_m_axi_gmem_ARQOS),
    .I_ARPROT(bll_input_U0_m_axi_gmem_ARPROT),
    .I_ARUSER(bll_input_U0_m_axi_gmem_ARUSER),
    .I_ARBURST(bll_input_U0_m_axi_gmem_ARBURST),
    .I_ARREGION(bll_input_U0_m_axi_gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(bll_input_U0_m_axi_gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

hyperloglog_top_bll_input bll_input_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bll_input_U0_ap_start),
    .start_full_n(start_for_bll_U0_full_n),
    .ap_done(bll_input_U0_ap_done),
    .ap_continue(bll_input_U0_ap_continue),
    .ap_idle(bll_input_U0_ap_idle),
    .ap_ready(bll_input_U0_ap_ready),
    .start_out(bll_input_U0_start_out),
    .start_write(bll_input_U0_start_write),
    .m_axi_gmem_AWVALID(bll_input_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(bll_input_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(bll_input_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(bll_input_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(bll_input_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(bll_input_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(bll_input_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(bll_input_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(bll_input_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(bll_input_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(bll_input_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(bll_input_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(bll_input_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(bll_input_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(bll_input_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(bll_input_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(bll_input_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(bll_input_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(bll_input_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(bll_input_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(bll_input_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(bll_input_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(bll_input_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(bll_input_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(bll_input_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(bll_input_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(bll_input_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(bll_input_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(bll_input_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(bll_input_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(bll_input_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(bll_input_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .s_axis_input_tuple_din(bll_input_U0_s_axis_input_tuple_din),
    .s_axis_input_tuple_full_n(s_axis_input_tuple_full_n),
    .s_axis_input_tuple_write(bll_input_U0_s_axis_input_tuple_write),
    .input_s(input_s),
    .N_s(N_s),
    .N_out_din(bll_input_U0_N_out_din),
    .N_out_full_n(N_c_full_n),
    .N_out_write(bll_input_U0_N_out_write)
);

hyperloglog_top_bll bll_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bll_U0_ap_start),
    .start_full_n(start_for_bll_output_U0_full_n),
    .ap_done(bll_U0_ap_done),
    .ap_continue(bll_U0_ap_continue),
    .ap_idle(bll_U0_ap_idle),
    .ap_ready(bll_U0_ap_ready),
    .start_out(bll_U0_start_out),
    .start_write(bll_U0_start_write),
    .s_axis_input_tuple_dout(s_axis_input_tuple_dout),
    .s_axis_input_tuple_empty_n(s_axis_input_tuple_empty_n),
    .s_axis_input_tuple_read(bll_U0_s_axis_input_tuple_read),
    .m_axis_write_data_din(bll_U0_m_axis_write_data_din),
    .m_axis_write_data_full_n(m_axis_write_data_full_n),
    .m_axis_write_data_write(bll_U0_m_axis_write_data_write),
    .N_s_dout(N_c_dout),
    .N_s_empty_n(N_c_empty_n),
    .N_s_read(bll_U0_N_s_read)
);

hyperloglog_top_bll_output bll_output_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bll_output_U0_ap_start),
    .ap_done(bll_output_U0_ap_done),
    .ap_continue(bll_output_U0_ap_continue),
    .ap_idle(bll_output_U0_ap_idle),
    .ap_ready(bll_output_U0_ap_ready),
    .m_axis_write_data_dout(m_axis_write_data_dout),
    .m_axis_write_data_empty_n(m_axis_write_data_empty_n),
    .m_axis_write_data_read(bll_output_U0_m_axis_write_data_read),
    .ap_return(bll_output_U0_ap_return)
);

hyperloglog_top_fifo_w1024_d8_A s_axis_input_tuple_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bll_input_U0_s_axis_input_tuple_din),
    .if_full_n(s_axis_input_tuple_full_n),
    .if_write(bll_input_U0_s_axis_input_tuple_write),
    .if_dout(s_axis_input_tuple_dout),
    .if_empty_n(s_axis_input_tuple_empty_n),
    .if_read(bll_U0_s_axis_input_tuple_read)
);

hyperloglog_top_fifo_w64_d2_S_x N_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bll_input_U0_N_out_din),
    .if_full_n(N_c_full_n),
    .if_write(bll_input_U0_N_out_write),
    .if_dout(N_c_dout),
    .if_empty_n(N_c_empty_n),
    .if_read(bll_U0_N_s_read)
);

hyperloglog_top_fifo_w64_d8_S_x m_axis_write_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bll_U0_m_axis_write_data_din),
    .if_full_n(m_axis_write_data_full_n),
    .if_write(bll_U0_m_axis_write_data_write),
    .if_dout(m_axis_write_data_dout),
    .if_empty_n(m_axis_write_data_empty_n),
    .if_read(bll_output_U0_m_axis_write_data_read)
);

hyperloglog_top_start_for_bll_U0 start_for_bll_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_bll_U0_din),
    .if_full_n(start_for_bll_U0_full_n),
    .if_write(bll_input_U0_start_write),
    .if_dout(start_for_bll_U0_dout),
    .if_empty_n(start_for_bll_U0_empty_n),
    .if_read(bll_U0_ap_ready)
);

hyperloglog_top_start_for_bll_output_U0 start_for_bll_output_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_bll_output_U0_din),
    .if_full_n(start_for_bll_output_U0_full_n),
    .if_write(bll_U0_start_write),
    .if_dout(start_for_bll_output_U0_dout),
    .if_empty_n(start_for_bll_output_U0_empty_n),
    .if_read(bll_output_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

assign ap_done = bll_output_U0_ap_done;

assign ap_idle = (bll_output_U0_ap_idle & bll_input_U0_ap_idle & bll_U0_ap_idle);

assign ap_ready = bll_input_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = bll_output_U0_ap_done;

assign ap_sync_ready = bll_input_U0_ap_ready;

assign bll_U0_ap_continue = 1'b1;

assign bll_U0_ap_start = start_for_bll_U0_empty_n;

assign bll_input_U0_ap_continue = 1'b1;

assign bll_input_U0_ap_start = ap_start;

assign bll_output_U0_ap_continue = ap_continue;

assign bll_output_U0_ap_start = start_for_bll_output_U0_empty_n;

assign bll_output_U0_start_full_n = 1'b1;

assign bll_output_U0_start_write = 1'b0;

assign start_for_bll_U0_din = 1'b1;

assign start_for_bll_output_U0_din = 1'b1;

endmodule //hyperloglog_top
