// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hyperloglog_top_aggr_bucket (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        bucket_fifo_V_V_0_dout,
        bucket_fifo_V_V_0_empty_n,
        bucket_fifo_V_V_0_read,
        bucket_fifo_V_V_1_dout,
        bucket_fifo_V_V_1_empty_n,
        bucket_fifo_V_V_1_read,
        bucket_fifo_V_V_2_dout,
        bucket_fifo_V_V_2_empty_n,
        bucket_fifo_V_V_2_read,
        bucket_fifo_V_V_3_dout,
        bucket_fifo_V_V_3_empty_n,
        bucket_fifo_V_V_3_read,
        bucket_fifo_V_V_4_dout,
        bucket_fifo_V_V_4_empty_n,
        bucket_fifo_V_V_4_read,
        bucket_fifo_V_V_5_dout,
        bucket_fifo_V_V_5_empty_n,
        bucket_fifo_V_V_5_read,
        bucket_fifo_V_V_6_dout,
        bucket_fifo_V_V_6_empty_n,
        bucket_fifo_V_V_6_read,
        bucket_fifo_V_V_7_dout,
        bucket_fifo_V_V_7_empty_n,
        bucket_fifo_V_V_7_read,
        bucket_fifo_V_V_8_dout,
        bucket_fifo_V_V_8_empty_n,
        bucket_fifo_V_V_8_read,
        bucket_fifo_V_V_9_dout,
        bucket_fifo_V_V_9_empty_n,
        bucket_fifo_V_V_9_read,
        bucket_fifo_V_V_10_dout,
        bucket_fifo_V_V_10_empty_n,
        bucket_fifo_V_V_10_read,
        bucket_fifo_V_V_11_dout,
        bucket_fifo_V_V_11_empty_n,
        bucket_fifo_V_V_11_read,
        bucket_fifo_V_V_12_dout,
        bucket_fifo_V_V_12_empty_n,
        bucket_fifo_V_V_12_read,
        bucket_fifo_V_V_13_dout,
        bucket_fifo_V_V_13_empty_n,
        bucket_fifo_V_V_13_read,
        bucket_fifo_V_V_14_dout,
        bucket_fifo_V_V_14_empty_n,
        bucket_fifo_V_V_14_read,
        bucket_fifo_V_V_15_dout,
        bucket_fifo_V_V_15_empty_n,
        bucket_fifo_V_V_15_read,
        aggr_out_din,
        aggr_out_full_n,
        aggr_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state15 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [4:0] bucket_fifo_V_V_0_dout;
input   bucket_fifo_V_V_0_empty_n;
output   bucket_fifo_V_V_0_read;
input  [4:0] bucket_fifo_V_V_1_dout;
input   bucket_fifo_V_V_1_empty_n;
output   bucket_fifo_V_V_1_read;
input  [4:0] bucket_fifo_V_V_2_dout;
input   bucket_fifo_V_V_2_empty_n;
output   bucket_fifo_V_V_2_read;
input  [4:0] bucket_fifo_V_V_3_dout;
input   bucket_fifo_V_V_3_empty_n;
output   bucket_fifo_V_V_3_read;
input  [4:0] bucket_fifo_V_V_4_dout;
input   bucket_fifo_V_V_4_empty_n;
output   bucket_fifo_V_V_4_read;
input  [4:0] bucket_fifo_V_V_5_dout;
input   bucket_fifo_V_V_5_empty_n;
output   bucket_fifo_V_V_5_read;
input  [4:0] bucket_fifo_V_V_6_dout;
input   bucket_fifo_V_V_6_empty_n;
output   bucket_fifo_V_V_6_read;
input  [4:0] bucket_fifo_V_V_7_dout;
input   bucket_fifo_V_V_7_empty_n;
output   bucket_fifo_V_V_7_read;
input  [4:0] bucket_fifo_V_V_8_dout;
input   bucket_fifo_V_V_8_empty_n;
output   bucket_fifo_V_V_8_read;
input  [4:0] bucket_fifo_V_V_9_dout;
input   bucket_fifo_V_V_9_empty_n;
output   bucket_fifo_V_V_9_read;
input  [4:0] bucket_fifo_V_V_10_dout;
input   bucket_fifo_V_V_10_empty_n;
output   bucket_fifo_V_V_10_read;
input  [4:0] bucket_fifo_V_V_11_dout;
input   bucket_fifo_V_V_11_empty_n;
output   bucket_fifo_V_V_11_read;
input  [4:0] bucket_fifo_V_V_12_dout;
input   bucket_fifo_V_V_12_empty_n;
output   bucket_fifo_V_V_12_read;
input  [4:0] bucket_fifo_V_V_13_dout;
input   bucket_fifo_V_V_13_empty_n;
output   bucket_fifo_V_V_13_read;
input  [4:0] bucket_fifo_V_V_14_dout;
input   bucket_fifo_V_V_14_empty_n;
output   bucket_fifo_V_V_14_read;
input  [4:0] bucket_fifo_V_V_15_dout;
input   bucket_fifo_V_V_15_empty_n;
output   bucket_fifo_V_V_15_read;
output  [15:0] aggr_out_din;
input   aggr_out_full_n;
output   aggr_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg bucket_fifo_V_V_0_read;
reg bucket_fifo_V_V_1_read;
reg bucket_fifo_V_V_2_read;
reg bucket_fifo_V_V_3_read;
reg bucket_fifo_V_V_4_read;
reg bucket_fifo_V_V_5_read;
reg bucket_fifo_V_V_6_read;
reg bucket_fifo_V_V_7_read;
reg bucket_fifo_V_V_8_read;
reg bucket_fifo_V_V_9_read;
reg bucket_fifo_V_V_10_read;
reg bucket_fifo_V_V_11_read;
reg bucket_fifo_V_V_12_read;
reg bucket_fifo_V_V_13_read;
reg bucket_fifo_V_V_14_read;
reg bucket_fifo_V_V_15_read;
reg aggr_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    bucket_fifo_V_V_0_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln41_reg_389;
reg    bucket_fifo_V_V_1_blk_n;
reg    bucket_fifo_V_V_2_blk_n;
reg    bucket_fifo_V_V_3_blk_n;
reg    bucket_fifo_V_V_4_blk_n;
reg    bucket_fifo_V_V_5_blk_n;
reg    bucket_fifo_V_V_6_blk_n;
reg    bucket_fifo_V_V_7_blk_n;
reg    bucket_fifo_V_V_8_blk_n;
reg    bucket_fifo_V_V_9_blk_n;
reg    bucket_fifo_V_V_10_blk_n;
reg    bucket_fifo_V_V_11_blk_n;
reg    bucket_fifo_V_V_12_blk_n;
reg    bucket_fifo_V_V_13_blk_n;
reg    bucket_fifo_V_V_14_blk_n;
reg    bucket_fifo_V_V_15_blk_n;
reg    aggr_out_blk_n;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln41_reg_389_pp0_iter11_reg;
reg   [16:0] b_V_reg_181;
wire   [16:0] b_V_1_fu_192_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
reg    ap_block_state14_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln41_fu_198_p2;
reg   [0:0] icmp_ln41_reg_389_pp0_iter1_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter2_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter3_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter4_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter5_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter6_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter7_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter8_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter9_reg;
reg   [0:0] icmp_ln41_reg_389_pp0_iter10_reg;
wire   [0:0] icmp_ln870_fu_204_p2;
reg   [0:0] icmp_ln870_reg_393;
reg   [0:0] icmp_ln870_reg_393_pp0_iter1_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter2_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter3_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter4_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter5_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter6_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter7_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter8_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter9_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter10_reg;
reg   [0:0] icmp_ln870_reg_393_pp0_iter11_reg;
reg   [4:0] numZerosTemp_V_reg_398;
reg   [4:0] numZerosTemp_V_1_reg_403;
wire   [0:0] icmp_ln878_fu_210_p2;
reg   [0:0] icmp_ln878_reg_408;
reg   [4:0] numZerosTemp_V_2_reg_413;
reg   [4:0] numZerosTemp_V_3_reg_419;
reg   [4:0] numZerosTemp_V_3_reg_419_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_4_reg_425;
reg   [4:0] numZerosTemp_V_4_reg_425_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_4_reg_425_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_5_reg_431;
reg   [4:0] numZerosTemp_V_5_reg_431_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_5_reg_431_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_6_reg_437;
reg   [4:0] numZerosTemp_V_6_reg_437_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_6_reg_437_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_6_reg_437_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_7_reg_443;
reg   [4:0] numZerosTemp_V_7_reg_443_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_7_reg_443_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_7_reg_443_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_7_reg_443_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_8_reg_449;
reg   [4:0] numZerosTemp_V_8_reg_449_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_8_reg_449_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_8_reg_449_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_8_reg_449_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_9_reg_455;
reg   [4:0] numZerosTemp_V_9_reg_455_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_9_reg_455_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_9_reg_455_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_9_reg_455_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_9_reg_455_pp0_iter6_reg;
reg   [4:0] numZerosTemp_V_10_reg_461;
reg   [4:0] numZerosTemp_V_10_reg_461_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_10_reg_461_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_10_reg_461_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_10_reg_461_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_10_reg_461_pp0_iter6_reg;
reg   [4:0] numZerosTemp_V_10_reg_461_pp0_iter7_reg;
reg   [4:0] numZerosTemp_V_11_reg_467;
reg   [4:0] numZerosTemp_V_11_reg_467_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_11_reg_467_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_11_reg_467_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_11_reg_467_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_11_reg_467_pp0_iter6_reg;
reg   [4:0] numZerosTemp_V_11_reg_467_pp0_iter7_reg;
reg   [4:0] numZerosTemp_V_12_reg_473;
reg   [4:0] numZerosTemp_V_12_reg_473_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_12_reg_473_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_12_reg_473_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_12_reg_473_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_12_reg_473_pp0_iter6_reg;
reg   [4:0] numZerosTemp_V_12_reg_473_pp0_iter7_reg;
reg   [4:0] numZerosTemp_V_12_reg_473_pp0_iter8_reg;
reg   [4:0] numZerosTemp_V_13_reg_479;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter6_reg;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter7_reg;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter8_reg;
reg   [4:0] numZerosTemp_V_13_reg_479_pp0_iter9_reg;
reg   [4:0] numZerosTemp_V_14_reg_485;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter6_reg;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter7_reg;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter8_reg;
reg   [4:0] numZerosTemp_V_14_reg_485_pp0_iter9_reg;
reg   [4:0] numZerosTemp_V_15_reg_491;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter2_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter3_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter4_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter5_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter6_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter7_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter8_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter9_reg;
reg   [4:0] numZerosTemp_V_15_reg_491_pp0_iter10_reg;
wire   [4:0] maxNumZeros_V_3_fu_226_p3;
reg   [4:0] maxNumZeros_V_3_reg_497;
wire   [4:0] maxNumZeros_V_5_fu_237_p3;
reg   [4:0] maxNumZeros_V_5_reg_503;
wire   [0:0] icmp_ln878_3_fu_243_p2;
reg   [0:0] icmp_ln878_3_reg_508;
wire   [4:0] maxNumZeros_V_8_fu_258_p3;
reg   [4:0] maxNumZeros_V_8_reg_513;
wire   [4:0] maxNumZeros_V_9_fu_269_p3;
reg   [4:0] maxNumZeros_V_9_reg_519;
wire   [0:0] icmp_ln878_6_fu_275_p2;
reg   [0:0] icmp_ln878_6_reg_524;
wire   [4:0] maxNumZeros_V_12_fu_290_p3;
reg   [4:0] maxNumZeros_V_12_reg_529;
wire   [4:0] maxNumZeros_V_14_fu_301_p3;
reg   [4:0] maxNumZeros_V_14_reg_535;
wire   [0:0] icmp_ln878_9_fu_307_p2;
reg   [0:0] icmp_ln878_9_reg_540;
wire   [4:0] maxNumZeros_V_17_fu_322_p3;
reg   [4:0] maxNumZeros_V_17_reg_545;
wire   [4:0] maxNumZeros_V_18_fu_333_p3;
reg   [4:0] maxNumZeros_V_18_reg_551;
wire   [0:0] icmp_ln878_12_fu_339_p2;
reg   [0:0] icmp_ln878_12_reg_556;
wire   [4:0] maxNumZeros_V_21_fu_354_p3;
reg   [4:0] maxNumZeros_V_21_reg_561;
wire   [4:0] maxNumZeros_V_23_fu_365_p3;
reg   [4:0] maxNumZeros_V_23_reg_567;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_block_pp0_stage0_01001;
wire   [4:0] maxNumZeros_V_2_fu_216_p3;
wire   [0:0] icmp_ln878_1_fu_221_p2;
wire   [0:0] icmp_ln878_2_fu_233_p2;
wire   [4:0] maxNumZeros_V_6_fu_248_p3;
wire   [0:0] icmp_ln878_4_fu_253_p2;
wire   [0:0] icmp_ln878_5_fu_265_p2;
wire   [4:0] maxNumZeros_V_11_fu_280_p3;
wire   [0:0] icmp_ln878_7_fu_285_p2;
wire   [0:0] icmp_ln878_8_fu_297_p2;
wire   [4:0] maxNumZeros_V_15_fu_312_p3;
wire   [0:0] icmp_ln878_10_fu_317_p2;
wire   [0:0] icmp_ln878_11_fu_329_p2;
wire   [4:0] maxNumZeros_V_20_fu_344_p3;
wire   [0:0] icmp_ln878_13_fu_349_p2;
wire   [0:0] icmp_ln878_14_fu_361_p2;
wire   [8:0] tmp_i_fu_371_p4;
wire    ap_CS_fsm_state15;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_198_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_V_reg_181 <= b_V_1_fu_192_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        b_V_reg_181 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln41_reg_389 <= icmp_ln41_fu_198_p2;
        icmp_ln41_reg_389_pp0_iter1_reg <= icmp_ln41_reg_389;
        icmp_ln870_reg_393_pp0_iter1_reg <= icmp_ln870_reg_393;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln41_reg_389_pp0_iter10_reg <= icmp_ln41_reg_389_pp0_iter9_reg;
        icmp_ln41_reg_389_pp0_iter11_reg <= icmp_ln41_reg_389_pp0_iter10_reg;
        icmp_ln41_reg_389_pp0_iter2_reg <= icmp_ln41_reg_389_pp0_iter1_reg;
        icmp_ln41_reg_389_pp0_iter3_reg <= icmp_ln41_reg_389_pp0_iter2_reg;
        icmp_ln41_reg_389_pp0_iter4_reg <= icmp_ln41_reg_389_pp0_iter3_reg;
        icmp_ln41_reg_389_pp0_iter5_reg <= icmp_ln41_reg_389_pp0_iter4_reg;
        icmp_ln41_reg_389_pp0_iter6_reg <= icmp_ln41_reg_389_pp0_iter5_reg;
        icmp_ln41_reg_389_pp0_iter7_reg <= icmp_ln41_reg_389_pp0_iter6_reg;
        icmp_ln41_reg_389_pp0_iter8_reg <= icmp_ln41_reg_389_pp0_iter7_reg;
        icmp_ln41_reg_389_pp0_iter9_reg <= icmp_ln41_reg_389_pp0_iter8_reg;
        icmp_ln870_reg_393_pp0_iter10_reg <= icmp_ln870_reg_393_pp0_iter9_reg;
        icmp_ln870_reg_393_pp0_iter11_reg <= icmp_ln870_reg_393_pp0_iter10_reg;
        icmp_ln870_reg_393_pp0_iter2_reg <= icmp_ln870_reg_393_pp0_iter1_reg;
        icmp_ln870_reg_393_pp0_iter3_reg <= icmp_ln870_reg_393_pp0_iter2_reg;
        icmp_ln870_reg_393_pp0_iter4_reg <= icmp_ln870_reg_393_pp0_iter3_reg;
        icmp_ln870_reg_393_pp0_iter5_reg <= icmp_ln870_reg_393_pp0_iter4_reg;
        icmp_ln870_reg_393_pp0_iter6_reg <= icmp_ln870_reg_393_pp0_iter5_reg;
        icmp_ln870_reg_393_pp0_iter7_reg <= icmp_ln870_reg_393_pp0_iter6_reg;
        icmp_ln870_reg_393_pp0_iter8_reg <= icmp_ln870_reg_393_pp0_iter7_reg;
        icmp_ln870_reg_393_pp0_iter9_reg <= icmp_ln870_reg_393_pp0_iter8_reg;
        numZerosTemp_V_10_reg_461_pp0_iter2_reg <= numZerosTemp_V_10_reg_461;
        numZerosTemp_V_10_reg_461_pp0_iter3_reg <= numZerosTemp_V_10_reg_461_pp0_iter2_reg;
        numZerosTemp_V_10_reg_461_pp0_iter4_reg <= numZerosTemp_V_10_reg_461_pp0_iter3_reg;
        numZerosTemp_V_10_reg_461_pp0_iter5_reg <= numZerosTemp_V_10_reg_461_pp0_iter4_reg;
        numZerosTemp_V_10_reg_461_pp0_iter6_reg <= numZerosTemp_V_10_reg_461_pp0_iter5_reg;
        numZerosTemp_V_10_reg_461_pp0_iter7_reg <= numZerosTemp_V_10_reg_461_pp0_iter6_reg;
        numZerosTemp_V_11_reg_467_pp0_iter2_reg <= numZerosTemp_V_11_reg_467;
        numZerosTemp_V_11_reg_467_pp0_iter3_reg <= numZerosTemp_V_11_reg_467_pp0_iter2_reg;
        numZerosTemp_V_11_reg_467_pp0_iter4_reg <= numZerosTemp_V_11_reg_467_pp0_iter3_reg;
        numZerosTemp_V_11_reg_467_pp0_iter5_reg <= numZerosTemp_V_11_reg_467_pp0_iter4_reg;
        numZerosTemp_V_11_reg_467_pp0_iter6_reg <= numZerosTemp_V_11_reg_467_pp0_iter5_reg;
        numZerosTemp_V_11_reg_467_pp0_iter7_reg <= numZerosTemp_V_11_reg_467_pp0_iter6_reg;
        numZerosTemp_V_12_reg_473_pp0_iter2_reg <= numZerosTemp_V_12_reg_473;
        numZerosTemp_V_12_reg_473_pp0_iter3_reg <= numZerosTemp_V_12_reg_473_pp0_iter2_reg;
        numZerosTemp_V_12_reg_473_pp0_iter4_reg <= numZerosTemp_V_12_reg_473_pp0_iter3_reg;
        numZerosTemp_V_12_reg_473_pp0_iter5_reg <= numZerosTemp_V_12_reg_473_pp0_iter4_reg;
        numZerosTemp_V_12_reg_473_pp0_iter6_reg <= numZerosTemp_V_12_reg_473_pp0_iter5_reg;
        numZerosTemp_V_12_reg_473_pp0_iter7_reg <= numZerosTemp_V_12_reg_473_pp0_iter6_reg;
        numZerosTemp_V_12_reg_473_pp0_iter8_reg <= numZerosTemp_V_12_reg_473_pp0_iter7_reg;
        numZerosTemp_V_13_reg_479_pp0_iter2_reg <= numZerosTemp_V_13_reg_479;
        numZerosTemp_V_13_reg_479_pp0_iter3_reg <= numZerosTemp_V_13_reg_479_pp0_iter2_reg;
        numZerosTemp_V_13_reg_479_pp0_iter4_reg <= numZerosTemp_V_13_reg_479_pp0_iter3_reg;
        numZerosTemp_V_13_reg_479_pp0_iter5_reg <= numZerosTemp_V_13_reg_479_pp0_iter4_reg;
        numZerosTemp_V_13_reg_479_pp0_iter6_reg <= numZerosTemp_V_13_reg_479_pp0_iter5_reg;
        numZerosTemp_V_13_reg_479_pp0_iter7_reg <= numZerosTemp_V_13_reg_479_pp0_iter6_reg;
        numZerosTemp_V_13_reg_479_pp0_iter8_reg <= numZerosTemp_V_13_reg_479_pp0_iter7_reg;
        numZerosTemp_V_13_reg_479_pp0_iter9_reg <= numZerosTemp_V_13_reg_479_pp0_iter8_reg;
        numZerosTemp_V_14_reg_485_pp0_iter2_reg <= numZerosTemp_V_14_reg_485;
        numZerosTemp_V_14_reg_485_pp0_iter3_reg <= numZerosTemp_V_14_reg_485_pp0_iter2_reg;
        numZerosTemp_V_14_reg_485_pp0_iter4_reg <= numZerosTemp_V_14_reg_485_pp0_iter3_reg;
        numZerosTemp_V_14_reg_485_pp0_iter5_reg <= numZerosTemp_V_14_reg_485_pp0_iter4_reg;
        numZerosTemp_V_14_reg_485_pp0_iter6_reg <= numZerosTemp_V_14_reg_485_pp0_iter5_reg;
        numZerosTemp_V_14_reg_485_pp0_iter7_reg <= numZerosTemp_V_14_reg_485_pp0_iter6_reg;
        numZerosTemp_V_14_reg_485_pp0_iter8_reg <= numZerosTemp_V_14_reg_485_pp0_iter7_reg;
        numZerosTemp_V_14_reg_485_pp0_iter9_reg <= numZerosTemp_V_14_reg_485_pp0_iter8_reg;
        numZerosTemp_V_15_reg_491_pp0_iter10_reg <= numZerosTemp_V_15_reg_491_pp0_iter9_reg;
        numZerosTemp_V_15_reg_491_pp0_iter2_reg <= numZerosTemp_V_15_reg_491;
        numZerosTemp_V_15_reg_491_pp0_iter3_reg <= numZerosTemp_V_15_reg_491_pp0_iter2_reg;
        numZerosTemp_V_15_reg_491_pp0_iter4_reg <= numZerosTemp_V_15_reg_491_pp0_iter3_reg;
        numZerosTemp_V_15_reg_491_pp0_iter5_reg <= numZerosTemp_V_15_reg_491_pp0_iter4_reg;
        numZerosTemp_V_15_reg_491_pp0_iter6_reg <= numZerosTemp_V_15_reg_491_pp0_iter5_reg;
        numZerosTemp_V_15_reg_491_pp0_iter7_reg <= numZerosTemp_V_15_reg_491_pp0_iter6_reg;
        numZerosTemp_V_15_reg_491_pp0_iter8_reg <= numZerosTemp_V_15_reg_491_pp0_iter7_reg;
        numZerosTemp_V_15_reg_491_pp0_iter9_reg <= numZerosTemp_V_15_reg_491_pp0_iter8_reg;
        numZerosTemp_V_3_reg_419_pp0_iter2_reg <= numZerosTemp_V_3_reg_419;
        numZerosTemp_V_4_reg_425_pp0_iter2_reg <= numZerosTemp_V_4_reg_425;
        numZerosTemp_V_4_reg_425_pp0_iter3_reg <= numZerosTemp_V_4_reg_425_pp0_iter2_reg;
        numZerosTemp_V_5_reg_431_pp0_iter2_reg <= numZerosTemp_V_5_reg_431;
        numZerosTemp_V_5_reg_431_pp0_iter3_reg <= numZerosTemp_V_5_reg_431_pp0_iter2_reg;
        numZerosTemp_V_6_reg_437_pp0_iter2_reg <= numZerosTemp_V_6_reg_437;
        numZerosTemp_V_6_reg_437_pp0_iter3_reg <= numZerosTemp_V_6_reg_437_pp0_iter2_reg;
        numZerosTemp_V_6_reg_437_pp0_iter4_reg <= numZerosTemp_V_6_reg_437_pp0_iter3_reg;
        numZerosTemp_V_7_reg_443_pp0_iter2_reg <= numZerosTemp_V_7_reg_443;
        numZerosTemp_V_7_reg_443_pp0_iter3_reg <= numZerosTemp_V_7_reg_443_pp0_iter2_reg;
        numZerosTemp_V_7_reg_443_pp0_iter4_reg <= numZerosTemp_V_7_reg_443_pp0_iter3_reg;
        numZerosTemp_V_7_reg_443_pp0_iter5_reg <= numZerosTemp_V_7_reg_443_pp0_iter4_reg;
        numZerosTemp_V_8_reg_449_pp0_iter2_reg <= numZerosTemp_V_8_reg_449;
        numZerosTemp_V_8_reg_449_pp0_iter3_reg <= numZerosTemp_V_8_reg_449_pp0_iter2_reg;
        numZerosTemp_V_8_reg_449_pp0_iter4_reg <= numZerosTemp_V_8_reg_449_pp0_iter3_reg;
        numZerosTemp_V_8_reg_449_pp0_iter5_reg <= numZerosTemp_V_8_reg_449_pp0_iter4_reg;
        numZerosTemp_V_9_reg_455_pp0_iter2_reg <= numZerosTemp_V_9_reg_455;
        numZerosTemp_V_9_reg_455_pp0_iter3_reg <= numZerosTemp_V_9_reg_455_pp0_iter2_reg;
        numZerosTemp_V_9_reg_455_pp0_iter4_reg <= numZerosTemp_V_9_reg_455_pp0_iter3_reg;
        numZerosTemp_V_9_reg_455_pp0_iter5_reg <= numZerosTemp_V_9_reg_455_pp0_iter4_reg;
        numZerosTemp_V_9_reg_455_pp0_iter6_reg <= numZerosTemp_V_9_reg_455_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_198_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln870_reg_393 <= icmp_ln870_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_12_reg_556 <= icmp_ln878_12_fu_339_p2;
        maxNumZeros_V_18_reg_551 <= maxNumZeros_V_18_fu_333_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_3_reg_508 <= icmp_ln878_3_fu_243_p2;
        maxNumZeros_V_5_reg_503 <= maxNumZeros_V_5_fu_237_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_6_reg_524 <= icmp_ln878_6_fu_275_p2;
        maxNumZeros_V_9_reg_519 <= maxNumZeros_V_9_fu_269_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_9_reg_540 <= icmp_ln878_9_fu_307_p2;
        maxNumZeros_V_14_reg_535 <= maxNumZeros_V_14_fu_301_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln878_reg_408 <= icmp_ln878_fu_210_p2;
        numZerosTemp_V_10_reg_461 <= bucket_fifo_V_V_10_dout;
        numZerosTemp_V_11_reg_467 <= bucket_fifo_V_V_11_dout;
        numZerosTemp_V_12_reg_473 <= bucket_fifo_V_V_12_dout;
        numZerosTemp_V_13_reg_479 <= bucket_fifo_V_V_13_dout;
        numZerosTemp_V_14_reg_485 <= bucket_fifo_V_V_14_dout;
        numZerosTemp_V_15_reg_491 <= bucket_fifo_V_V_15_dout;
        numZerosTemp_V_1_reg_403 <= bucket_fifo_V_V_1_dout;
        numZerosTemp_V_2_reg_413 <= bucket_fifo_V_V_2_dout;
        numZerosTemp_V_3_reg_419 <= bucket_fifo_V_V_3_dout;
        numZerosTemp_V_4_reg_425 <= bucket_fifo_V_V_4_dout;
        numZerosTemp_V_5_reg_431 <= bucket_fifo_V_V_5_dout;
        numZerosTemp_V_6_reg_437 <= bucket_fifo_V_V_6_dout;
        numZerosTemp_V_7_reg_443 <= bucket_fifo_V_V_7_dout;
        numZerosTemp_V_8_reg_449 <= bucket_fifo_V_V_8_dout;
        numZerosTemp_V_9_reg_455 <= bucket_fifo_V_V_9_dout;
        numZerosTemp_V_reg_398 <= bucket_fifo_V_V_0_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        maxNumZeros_V_12_reg_529 <= maxNumZeros_V_12_fu_290_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        maxNumZeros_V_17_reg_545 <= maxNumZeros_V_17_fu_322_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        maxNumZeros_V_21_reg_561 <= maxNumZeros_V_21_fu_354_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        maxNumZeros_V_23_reg_567 <= maxNumZeros_V_23_fu_365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        maxNumZeros_V_3_reg_497 <= maxNumZeros_V_3_fu_226_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_389_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        maxNumZeros_V_8_reg_513 <= maxNumZeros_V_8_fu_258_p3;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_389_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        aggr_out_blk_n = aggr_out_full_n;
    end else begin
        aggr_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_389_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aggr_out_write = 1'b1;
    end else begin
        aggr_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln41_fu_198_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_0_blk_n = bucket_fifo_V_V_0_empty_n;
    end else begin
        bucket_fifo_V_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_0_read = 1'b1;
    end else begin
        bucket_fifo_V_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_10_blk_n = bucket_fifo_V_V_10_empty_n;
    end else begin
        bucket_fifo_V_V_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_10_read = 1'b1;
    end else begin
        bucket_fifo_V_V_10_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_11_blk_n = bucket_fifo_V_V_11_empty_n;
    end else begin
        bucket_fifo_V_V_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_11_read = 1'b1;
    end else begin
        bucket_fifo_V_V_11_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_12_blk_n = bucket_fifo_V_V_12_empty_n;
    end else begin
        bucket_fifo_V_V_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_12_read = 1'b1;
    end else begin
        bucket_fifo_V_V_12_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_13_blk_n = bucket_fifo_V_V_13_empty_n;
    end else begin
        bucket_fifo_V_V_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_13_read = 1'b1;
    end else begin
        bucket_fifo_V_V_13_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_14_blk_n = bucket_fifo_V_V_14_empty_n;
    end else begin
        bucket_fifo_V_V_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_14_read = 1'b1;
    end else begin
        bucket_fifo_V_V_14_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_15_blk_n = bucket_fifo_V_V_15_empty_n;
    end else begin
        bucket_fifo_V_V_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_15_read = 1'b1;
    end else begin
        bucket_fifo_V_V_15_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_1_blk_n = bucket_fifo_V_V_1_empty_n;
    end else begin
        bucket_fifo_V_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_1_read = 1'b1;
    end else begin
        bucket_fifo_V_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_2_blk_n = bucket_fifo_V_V_2_empty_n;
    end else begin
        bucket_fifo_V_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_2_read = 1'b1;
    end else begin
        bucket_fifo_V_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_3_blk_n = bucket_fifo_V_V_3_empty_n;
    end else begin
        bucket_fifo_V_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_3_read = 1'b1;
    end else begin
        bucket_fifo_V_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_4_blk_n = bucket_fifo_V_V_4_empty_n;
    end else begin
        bucket_fifo_V_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_4_read = 1'b1;
    end else begin
        bucket_fifo_V_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_5_blk_n = bucket_fifo_V_V_5_empty_n;
    end else begin
        bucket_fifo_V_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_5_read = 1'b1;
    end else begin
        bucket_fifo_V_V_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_6_blk_n = bucket_fifo_V_V_6_empty_n;
    end else begin
        bucket_fifo_V_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_6_read = 1'b1;
    end else begin
        bucket_fifo_V_V_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_7_blk_n = bucket_fifo_V_V_7_empty_n;
    end else begin
        bucket_fifo_V_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_7_read = 1'b1;
    end else begin
        bucket_fifo_V_V_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_8_blk_n = bucket_fifo_V_V_8_empty_n;
    end else begin
        bucket_fifo_V_V_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_8_read = 1'b1;
    end else begin
        bucket_fifo_V_V_8_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_9_blk_n = bucket_fifo_V_V_9_empty_n;
    end else begin
        bucket_fifo_V_V_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln41_reg_389 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bucket_fifo_V_V_9_read = 1'b1;
    end else begin
        bucket_fifo_V_V_9_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln41_fu_198_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln41_fu_198_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aggr_out_din = tmp_i_fu_371_p4;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b0 == aggr_out_full_n) & (icmp_ln41_reg_389_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((bucket_fifo_V_V_14_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_13_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_12_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_11_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_10_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_9_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_8_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_7_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_6_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_5_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_4_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_3_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_2_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_1_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_0_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((icmp_ln41_reg_389 == 1'd0) & (bucket_fifo_V_V_15_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b0 == aggr_out_full_n) & (icmp_ln41_reg_389_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((bucket_fifo_V_V_14_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_13_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_12_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_11_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_10_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_9_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_8_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_7_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_6_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_5_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_4_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_3_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_2_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_1_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_0_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((icmp_ln41_reg_389 == 1'd0) & (bucket_fifo_V_V_15_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b0 == aggr_out_full_n) & (icmp_ln41_reg_389_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((bucket_fifo_V_V_14_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_13_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_12_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_11_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_10_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_9_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_8_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_7_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_6_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_5_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_4_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_3_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_2_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_1_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_0_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((icmp_ln41_reg_389 == 1'd0) & (bucket_fifo_V_V_15_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter12 = ((1'b0 == aggr_out_full_n) & (icmp_ln41_reg_389_pp0_iter11_reg == 1'd0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((bucket_fifo_V_V_14_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_13_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_12_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_11_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_10_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_9_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_8_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_7_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_6_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_5_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_4_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_3_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_2_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_1_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((bucket_fifo_V_V_0_empty_n == 1'b0) & (icmp_ln41_reg_389 == 1'd0)) | ((icmp_ln41_reg_389 == 1'd0) & (bucket_fifo_V_V_15_empty_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign b_V_1_fu_192_p2 = (b_V_reg_181 + 17'd1);

assign icmp_ln41_fu_198_p2 = ((b_V_reg_181 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_204_p2 = ((b_V_reg_181 == 17'd65535) ? 1'b1 : 1'b0);

assign icmp_ln878_10_fu_317_p2 = ((maxNumZeros_V_15_fu_312_p3 < numZerosTemp_V_11_reg_467_pp0_iter7_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_11_fu_329_p2 = ((maxNumZeros_V_17_reg_545 < numZerosTemp_V_12_reg_473_pp0_iter8_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_12_fu_339_p2 = ((maxNumZeros_V_18_fu_333_p3 < numZerosTemp_V_13_reg_479_pp0_iter8_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_13_fu_349_p2 = ((maxNumZeros_V_20_fu_344_p3 < numZerosTemp_V_14_reg_485_pp0_iter9_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_14_fu_361_p2 = ((maxNumZeros_V_21_reg_561 < numZerosTemp_V_15_reg_491_pp0_iter10_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_221_p2 = ((maxNumZeros_V_2_fu_216_p3 < numZerosTemp_V_2_reg_413) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_233_p2 = ((maxNumZeros_V_3_reg_497 < numZerosTemp_V_3_reg_419_pp0_iter2_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_243_p2 = ((maxNumZeros_V_5_fu_237_p3 < numZerosTemp_V_4_reg_425_pp0_iter2_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_253_p2 = ((maxNumZeros_V_6_fu_248_p3 < numZerosTemp_V_5_reg_431_pp0_iter3_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_265_p2 = ((maxNumZeros_V_8_reg_513 < numZerosTemp_V_6_reg_437_pp0_iter4_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_6_fu_275_p2 = ((maxNumZeros_V_9_fu_269_p3 < numZerosTemp_V_7_reg_443_pp0_iter4_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_7_fu_285_p2 = ((maxNumZeros_V_11_fu_280_p3 < numZerosTemp_V_8_reg_449_pp0_iter5_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_8_fu_297_p2 = ((maxNumZeros_V_12_reg_529 < numZerosTemp_V_9_reg_455_pp0_iter6_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_9_fu_307_p2 = ((maxNumZeros_V_14_fu_301_p3 < numZerosTemp_V_10_reg_461_pp0_iter6_reg) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_210_p2 = ((bucket_fifo_V_V_0_dout < bucket_fifo_V_V_1_dout) ? 1'b1 : 1'b0);

assign maxNumZeros_V_11_fu_280_p3 = ((icmp_ln878_6_reg_524[0:0] == 1'b1) ? numZerosTemp_V_7_reg_443_pp0_iter5_reg : maxNumZeros_V_9_reg_519);

assign maxNumZeros_V_12_fu_290_p3 = ((icmp_ln878_7_fu_285_p2[0:0] == 1'b1) ? numZerosTemp_V_8_reg_449_pp0_iter5_reg : maxNumZeros_V_11_fu_280_p3);

assign maxNumZeros_V_14_fu_301_p3 = ((icmp_ln878_8_fu_297_p2[0:0] == 1'b1) ? numZerosTemp_V_9_reg_455_pp0_iter6_reg : maxNumZeros_V_12_reg_529);

assign maxNumZeros_V_15_fu_312_p3 = ((icmp_ln878_9_reg_540[0:0] == 1'b1) ? numZerosTemp_V_10_reg_461_pp0_iter7_reg : maxNumZeros_V_14_reg_535);

assign maxNumZeros_V_17_fu_322_p3 = ((icmp_ln878_10_fu_317_p2[0:0] == 1'b1) ? numZerosTemp_V_11_reg_467_pp0_iter7_reg : maxNumZeros_V_15_fu_312_p3);

assign maxNumZeros_V_18_fu_333_p3 = ((icmp_ln878_11_fu_329_p2[0:0] == 1'b1) ? numZerosTemp_V_12_reg_473_pp0_iter8_reg : maxNumZeros_V_17_reg_545);

assign maxNumZeros_V_20_fu_344_p3 = ((icmp_ln878_12_reg_556[0:0] == 1'b1) ? numZerosTemp_V_13_reg_479_pp0_iter9_reg : maxNumZeros_V_18_reg_551);

assign maxNumZeros_V_21_fu_354_p3 = ((icmp_ln878_13_fu_349_p2[0:0] == 1'b1) ? numZerosTemp_V_14_reg_485_pp0_iter9_reg : maxNumZeros_V_20_fu_344_p3);

assign maxNumZeros_V_23_fu_365_p3 = ((icmp_ln878_14_fu_361_p2[0:0] == 1'b1) ? numZerosTemp_V_15_reg_491_pp0_iter10_reg : maxNumZeros_V_21_reg_561);

assign maxNumZeros_V_2_fu_216_p3 = ((icmp_ln878_reg_408[0:0] == 1'b1) ? numZerosTemp_V_1_reg_403 : numZerosTemp_V_reg_398);

assign maxNumZeros_V_3_fu_226_p3 = ((icmp_ln878_1_fu_221_p2[0:0] == 1'b1) ? numZerosTemp_V_2_reg_413 : maxNumZeros_V_2_fu_216_p3);

assign maxNumZeros_V_5_fu_237_p3 = ((icmp_ln878_2_fu_233_p2[0:0] == 1'b1) ? numZerosTemp_V_3_reg_419_pp0_iter2_reg : maxNumZeros_V_3_reg_497);

assign maxNumZeros_V_6_fu_248_p3 = ((icmp_ln878_3_reg_508[0:0] == 1'b1) ? numZerosTemp_V_4_reg_425_pp0_iter3_reg : maxNumZeros_V_5_reg_503);

assign maxNumZeros_V_8_fu_258_p3 = ((icmp_ln878_4_fu_253_p2[0:0] == 1'b1) ? numZerosTemp_V_5_reg_431_pp0_iter3_reg : maxNumZeros_V_6_fu_248_p3);

assign maxNumZeros_V_9_fu_269_p3 = ((icmp_ln878_5_fu_265_p2[0:0] == 1'b1) ? numZerosTemp_V_6_reg_437_pp0_iter4_reg : maxNumZeros_V_8_reg_513);

assign start_out = real_start;

assign tmp_i_fu_371_p4 = {{{icmp_ln870_reg_393_pp0_iter11_reg}, {3'd0}}, {maxNumZeros_V_23_reg_567}};

endmodule //hyperloglog_top_aggr_bucket
