// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pgrnk_div_weights (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        weights_dout,
        weights_empty_n,
        weights_read,
        oe_counts_dout,
        oe_counts_empty_n,
        oe_counts_read,
        out_weights_din,
        out_weights_full_n,
        out_weights_write,
        num_verts_dout,
        num_verts_empty_n,
        num_verts_read,
        num_verts_out_din,
        num_verts_out_full_n,
        num_verts_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state73 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] weights_dout;
input   weights_empty_n;
output   weights_read;
input  [63:0] oe_counts_dout;
input   oe_counts_empty_n;
output   oe_counts_read;
output  [63:0] out_weights_din;
input   out_weights_full_n;
output   out_weights_write;
input  [63:0] num_verts_dout;
input   num_verts_empty_n;
output   num_verts_read;
output  [63:0] num_verts_out_din;
input   num_verts_out_full_n;
output   num_verts_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weights_read;
reg oe_counts_read;
reg out_weights_write;
reg num_verts_read;
reg num_verts_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weights_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln83_reg_134;
reg    oe_counts_blk_n;
reg    out_weights_blk_n;
reg    ap_enable_reg_pp0_iter70;
reg   [0:0] icmp_ln83_reg_134_pp0_iter69_reg;
reg    num_verts_blk_n;
reg    num_verts_out_blk_n;
reg   [63:0] i_reg_81;
reg   [63:0] num_verts_read_reg_124;
wire   [63:0] i_5_fu_104_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
wire    ap_block_state57_pp0_stage0_iter55;
wire    ap_block_state58_pp0_stage0_iter56;
wire    ap_block_state59_pp0_stage0_iter57;
wire    ap_block_state60_pp0_stage0_iter58;
wire    ap_block_state61_pp0_stage0_iter59;
wire    ap_block_state62_pp0_stage0_iter60;
wire    ap_block_state63_pp0_stage0_iter61;
wire    ap_block_state64_pp0_stage0_iter62;
wire    ap_block_state65_pp0_stage0_iter63;
wire    ap_block_state66_pp0_stage0_iter64;
wire    ap_block_state67_pp0_stage0_iter65;
wire    ap_block_state68_pp0_stage0_iter66;
wire    ap_block_state69_pp0_stage0_iter67;
wire    ap_block_state70_pp0_stage0_iter68;
wire    ap_block_state71_pp0_stage0_iter69;
reg    ap_block_state72_pp0_stage0_iter70;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln83_fu_110_p2;
reg   [0:0] icmp_ln83_reg_134_pp0_iter1_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter2_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter3_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter4_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter5_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter6_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter7_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter8_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter9_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter10_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter11_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter12_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter13_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter14_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter15_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter16_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter17_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter18_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter19_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter20_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter21_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter22_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter23_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter24_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter25_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter26_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter27_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter28_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter29_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter30_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter31_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter32_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter33_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter34_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter35_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter36_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter37_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter38_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter39_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter40_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter41_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter42_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter43_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter44_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter45_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter46_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter47_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter48_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter49_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter50_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter51_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter52_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter53_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter54_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter55_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter56_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter57_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter58_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter59_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter60_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter61_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter62_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter63_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter64_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter65_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter66_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter67_reg;
reg   [0:0] icmp_ln83_reg_134_pp0_iter68_reg;
reg   [63:0] tmp_reg_138;
reg   [63:0] tmp_5_reg_143;
wire   [0:0] icmp_ln88_fu_115_p2;
reg   [0:0] icmp_ln88_reg_149;
reg   [0:0] icmp_ln88_reg_149_pp0_iter3_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter4_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter5_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter6_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter7_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter8_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter9_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter10_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter11_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter12_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter13_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter14_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter15_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter16_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter17_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter18_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter19_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter20_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter21_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter22_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter23_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter24_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter25_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter26_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter27_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter28_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter29_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter30_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter31_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter32_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter33_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter34_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter35_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter36_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter37_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter38_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter39_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter40_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter41_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter42_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter43_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter44_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter45_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter46_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter47_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter48_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter49_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter50_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter51_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter52_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter53_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter54_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter55_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter56_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter57_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter58_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter59_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter60_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter61_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter62_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter63_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter64_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter65_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter66_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter67_reg;
reg   [0:0] icmp_ln88_reg_149_pp0_iter68_reg;
wire   [63:0] grp_fu_120_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
wire   [63:0] ap_phi_reg_pp0_iter0_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter1_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter2_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter3_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter4_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter5_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter6_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter7_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter8_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter9_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter10_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter11_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter12_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter13_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter14_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter15_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter16_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter17_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter18_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter19_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter20_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter21_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter22_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter23_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter24_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter25_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter26_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter27_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter28_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter29_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter30_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter31_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter32_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter33_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter34_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter35_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter36_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter37_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter38_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter39_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter40_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter41_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter42_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter43_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter44_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter45_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter46_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter47_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter48_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter49_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter50_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter51_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter52_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter53_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter54_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter55_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter56_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter57_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter58_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter59_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter60_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter61_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter62_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter63_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter64_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter65_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter66_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter67_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter68_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter69_out_weight_reg_92;
reg   [63:0] ap_phi_reg_pp0_iter70_out_weight_reg_92;
reg    ap_block_pp0_stage0_01001;
reg    grp_fu_120_ce;
wire    ap_CS_fsm_state73;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
end

pgrnk_udiv_64ns_64ns_64_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
udiv_64ns_64ns_64_68_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_138),
    .din1(tmp_5_reg_143),
    .ce(grp_fu_120_ce),
    .dout(grp_fu_120_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state73)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (num_verts_out_full_n == 1'b0) | (num_verts_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end else if ((~((ap_start == 1'b0) | (num_verts_out_full_n == 1'b0) | (num_verts_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter70 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln88_fu_115_p2 == 1'd1) & (icmp_ln83_reg_134_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_out_weight_reg_92 <= 64'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_out_weight_reg_92 <= ap_phi_reg_pp0_iter2_out_weight_reg_92;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter69 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln88_reg_149_pp0_iter68_reg == 1'd0) & (icmp_ln83_reg_134_pp0_iter68_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter70_out_weight_reg_92 <= grp_fu_120_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter70_out_weight_reg_92 <= ap_phi_reg_pp0_iter69_out_weight_reg_92;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln83_fu_110_p2 == 1'd0))) begin
        i_reg_81 <= i_5_fu_104_p2;
    end else if ((~((ap_start == 1'b0) | (num_verts_out_full_n == 1'b0) | (num_verts_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_81 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        ap_phi_reg_pp0_iter10_out_weight_reg_92 <= ap_phi_reg_pp0_iter9_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_phi_reg_pp0_iter11_out_weight_reg_92 <= ap_phi_reg_pp0_iter10_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_reg_pp0_iter12_out_weight_reg_92 <= ap_phi_reg_pp0_iter11_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        ap_phi_reg_pp0_iter13_out_weight_reg_92 <= ap_phi_reg_pp0_iter12_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        ap_phi_reg_pp0_iter14_out_weight_reg_92 <= ap_phi_reg_pp0_iter13_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        ap_phi_reg_pp0_iter15_out_weight_reg_92 <= ap_phi_reg_pp0_iter14_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        ap_phi_reg_pp0_iter16_out_weight_reg_92 <= ap_phi_reg_pp0_iter15_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        ap_phi_reg_pp0_iter17_out_weight_reg_92 <= ap_phi_reg_pp0_iter16_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        ap_phi_reg_pp0_iter18_out_weight_reg_92 <= ap_phi_reg_pp0_iter17_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        ap_phi_reg_pp0_iter19_out_weight_reg_92 <= ap_phi_reg_pp0_iter18_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_out_weight_reg_92 <= ap_phi_reg_pp0_iter0_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        ap_phi_reg_pp0_iter20_out_weight_reg_92 <= ap_phi_reg_pp0_iter19_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        ap_phi_reg_pp0_iter21_out_weight_reg_92 <= ap_phi_reg_pp0_iter20_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        ap_phi_reg_pp0_iter22_out_weight_reg_92 <= ap_phi_reg_pp0_iter21_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        ap_phi_reg_pp0_iter23_out_weight_reg_92 <= ap_phi_reg_pp0_iter22_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter23 == 1'b1))) begin
        ap_phi_reg_pp0_iter24_out_weight_reg_92 <= ap_phi_reg_pp0_iter23_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        ap_phi_reg_pp0_iter25_out_weight_reg_92 <= ap_phi_reg_pp0_iter24_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter25 == 1'b1))) begin
        ap_phi_reg_pp0_iter26_out_weight_reg_92 <= ap_phi_reg_pp0_iter25_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        ap_phi_reg_pp0_iter27_out_weight_reg_92 <= ap_phi_reg_pp0_iter26_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_phi_reg_pp0_iter28_out_weight_reg_92 <= ap_phi_reg_pp0_iter27_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_out_weight_reg_92 <= ap_phi_reg_pp0_iter28_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_out_weight_reg_92 <= ap_phi_reg_pp0_iter1_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_phi_reg_pp0_iter30_out_weight_reg_92 <= ap_phi_reg_pp0_iter29_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        ap_phi_reg_pp0_iter31_out_weight_reg_92 <= ap_phi_reg_pp0_iter30_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter31 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter32_out_weight_reg_92 <= ap_phi_reg_pp0_iter31_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter33_out_weight_reg_92 <= ap_phi_reg_pp0_iter32_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter33 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter34_out_weight_reg_92 <= ap_phi_reg_pp0_iter33_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter35_out_weight_reg_92 <= ap_phi_reg_pp0_iter34_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter35 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter36_out_weight_reg_92 <= ap_phi_reg_pp0_iter35_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter36 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter37_out_weight_reg_92 <= ap_phi_reg_pp0_iter36_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter38_out_weight_reg_92 <= ap_phi_reg_pp0_iter37_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter38 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter39_out_weight_reg_92 <= ap_phi_reg_pp0_iter38_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter40_out_weight_reg_92 <= ap_phi_reg_pp0_iter39_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter40 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter41_out_weight_reg_92 <= ap_phi_reg_pp0_iter40_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter41 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter42_out_weight_reg_92 <= ap_phi_reg_pp0_iter41_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter42 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter43_out_weight_reg_92 <= ap_phi_reg_pp0_iter42_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter44_out_weight_reg_92 <= ap_phi_reg_pp0_iter43_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter44 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter45_out_weight_reg_92 <= ap_phi_reg_pp0_iter44_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter45 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter46_out_weight_reg_92 <= ap_phi_reg_pp0_iter45_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter46 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter47_out_weight_reg_92 <= ap_phi_reg_pp0_iter46_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter47 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter48_out_weight_reg_92 <= ap_phi_reg_pp0_iter47_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter48 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter49_out_weight_reg_92 <= ap_phi_reg_pp0_iter48_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_out_weight_reg_92 <= ap_phi_reg_pp0_iter3_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter49 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter50_out_weight_reg_92 <= ap_phi_reg_pp0_iter49_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter50 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter51_out_weight_reg_92 <= ap_phi_reg_pp0_iter50_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter51 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter52_out_weight_reg_92 <= ap_phi_reg_pp0_iter51_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter52 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter53_out_weight_reg_92 <= ap_phi_reg_pp0_iter52_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter53 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter54_out_weight_reg_92 <= ap_phi_reg_pp0_iter53_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter54 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter55_out_weight_reg_92 <= ap_phi_reg_pp0_iter54_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter55 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter56_out_weight_reg_92 <= ap_phi_reg_pp0_iter55_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter56 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter57_out_weight_reg_92 <= ap_phi_reg_pp0_iter56_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter57 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter58_out_weight_reg_92 <= ap_phi_reg_pp0_iter57_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter58 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter59_out_weight_reg_92 <= ap_phi_reg_pp0_iter58_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_out_weight_reg_92 <= ap_phi_reg_pp0_iter4_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter59 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter60_out_weight_reg_92 <= ap_phi_reg_pp0_iter59_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter60 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter61_out_weight_reg_92 <= ap_phi_reg_pp0_iter60_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter61 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter62_out_weight_reg_92 <= ap_phi_reg_pp0_iter61_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter62 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter63_out_weight_reg_92 <= ap_phi_reg_pp0_iter62_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter63 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter64_out_weight_reg_92 <= ap_phi_reg_pp0_iter63_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter64 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter65_out_weight_reg_92 <= ap_phi_reg_pp0_iter64_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter65 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter66_out_weight_reg_92 <= ap_phi_reg_pp0_iter65_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter66 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter67_out_weight_reg_92 <= ap_phi_reg_pp0_iter66_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter67 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter68_out_weight_reg_92 <= ap_phi_reg_pp0_iter67_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter68 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter69_out_weight_reg_92 <= ap_phi_reg_pp0_iter68_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_out_weight_reg_92 <= ap_phi_reg_pp0_iter5_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_out_weight_reg_92 <= ap_phi_reg_pp0_iter6_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_out_weight_reg_92 <= ap_phi_reg_pp0_iter7_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_reg_pp0_iter9_out_weight_reg_92 <= ap_phi_reg_pp0_iter8_out_weight_reg_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln83_reg_134 <= icmp_ln83_fu_110_p2;
        icmp_ln83_reg_134_pp0_iter1_reg <= icmp_ln83_reg_134;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln83_reg_134_pp0_iter10_reg <= icmp_ln83_reg_134_pp0_iter9_reg;
        icmp_ln83_reg_134_pp0_iter11_reg <= icmp_ln83_reg_134_pp0_iter10_reg;
        icmp_ln83_reg_134_pp0_iter12_reg <= icmp_ln83_reg_134_pp0_iter11_reg;
        icmp_ln83_reg_134_pp0_iter13_reg <= icmp_ln83_reg_134_pp0_iter12_reg;
        icmp_ln83_reg_134_pp0_iter14_reg <= icmp_ln83_reg_134_pp0_iter13_reg;
        icmp_ln83_reg_134_pp0_iter15_reg <= icmp_ln83_reg_134_pp0_iter14_reg;
        icmp_ln83_reg_134_pp0_iter16_reg <= icmp_ln83_reg_134_pp0_iter15_reg;
        icmp_ln83_reg_134_pp0_iter17_reg <= icmp_ln83_reg_134_pp0_iter16_reg;
        icmp_ln83_reg_134_pp0_iter18_reg <= icmp_ln83_reg_134_pp0_iter17_reg;
        icmp_ln83_reg_134_pp0_iter19_reg <= icmp_ln83_reg_134_pp0_iter18_reg;
        icmp_ln83_reg_134_pp0_iter20_reg <= icmp_ln83_reg_134_pp0_iter19_reg;
        icmp_ln83_reg_134_pp0_iter21_reg <= icmp_ln83_reg_134_pp0_iter20_reg;
        icmp_ln83_reg_134_pp0_iter22_reg <= icmp_ln83_reg_134_pp0_iter21_reg;
        icmp_ln83_reg_134_pp0_iter23_reg <= icmp_ln83_reg_134_pp0_iter22_reg;
        icmp_ln83_reg_134_pp0_iter24_reg <= icmp_ln83_reg_134_pp0_iter23_reg;
        icmp_ln83_reg_134_pp0_iter25_reg <= icmp_ln83_reg_134_pp0_iter24_reg;
        icmp_ln83_reg_134_pp0_iter26_reg <= icmp_ln83_reg_134_pp0_iter25_reg;
        icmp_ln83_reg_134_pp0_iter27_reg <= icmp_ln83_reg_134_pp0_iter26_reg;
        icmp_ln83_reg_134_pp0_iter28_reg <= icmp_ln83_reg_134_pp0_iter27_reg;
        icmp_ln83_reg_134_pp0_iter29_reg <= icmp_ln83_reg_134_pp0_iter28_reg;
        icmp_ln83_reg_134_pp0_iter2_reg <= icmp_ln83_reg_134_pp0_iter1_reg;
        icmp_ln83_reg_134_pp0_iter30_reg <= icmp_ln83_reg_134_pp0_iter29_reg;
        icmp_ln83_reg_134_pp0_iter31_reg <= icmp_ln83_reg_134_pp0_iter30_reg;
        icmp_ln83_reg_134_pp0_iter32_reg <= icmp_ln83_reg_134_pp0_iter31_reg;
        icmp_ln83_reg_134_pp0_iter33_reg <= icmp_ln83_reg_134_pp0_iter32_reg;
        icmp_ln83_reg_134_pp0_iter34_reg <= icmp_ln83_reg_134_pp0_iter33_reg;
        icmp_ln83_reg_134_pp0_iter35_reg <= icmp_ln83_reg_134_pp0_iter34_reg;
        icmp_ln83_reg_134_pp0_iter36_reg <= icmp_ln83_reg_134_pp0_iter35_reg;
        icmp_ln83_reg_134_pp0_iter37_reg <= icmp_ln83_reg_134_pp0_iter36_reg;
        icmp_ln83_reg_134_pp0_iter38_reg <= icmp_ln83_reg_134_pp0_iter37_reg;
        icmp_ln83_reg_134_pp0_iter39_reg <= icmp_ln83_reg_134_pp0_iter38_reg;
        icmp_ln83_reg_134_pp0_iter3_reg <= icmp_ln83_reg_134_pp0_iter2_reg;
        icmp_ln83_reg_134_pp0_iter40_reg <= icmp_ln83_reg_134_pp0_iter39_reg;
        icmp_ln83_reg_134_pp0_iter41_reg <= icmp_ln83_reg_134_pp0_iter40_reg;
        icmp_ln83_reg_134_pp0_iter42_reg <= icmp_ln83_reg_134_pp0_iter41_reg;
        icmp_ln83_reg_134_pp0_iter43_reg <= icmp_ln83_reg_134_pp0_iter42_reg;
        icmp_ln83_reg_134_pp0_iter44_reg <= icmp_ln83_reg_134_pp0_iter43_reg;
        icmp_ln83_reg_134_pp0_iter45_reg <= icmp_ln83_reg_134_pp0_iter44_reg;
        icmp_ln83_reg_134_pp0_iter46_reg <= icmp_ln83_reg_134_pp0_iter45_reg;
        icmp_ln83_reg_134_pp0_iter47_reg <= icmp_ln83_reg_134_pp0_iter46_reg;
        icmp_ln83_reg_134_pp0_iter48_reg <= icmp_ln83_reg_134_pp0_iter47_reg;
        icmp_ln83_reg_134_pp0_iter49_reg <= icmp_ln83_reg_134_pp0_iter48_reg;
        icmp_ln83_reg_134_pp0_iter4_reg <= icmp_ln83_reg_134_pp0_iter3_reg;
        icmp_ln83_reg_134_pp0_iter50_reg <= icmp_ln83_reg_134_pp0_iter49_reg;
        icmp_ln83_reg_134_pp0_iter51_reg <= icmp_ln83_reg_134_pp0_iter50_reg;
        icmp_ln83_reg_134_pp0_iter52_reg <= icmp_ln83_reg_134_pp0_iter51_reg;
        icmp_ln83_reg_134_pp0_iter53_reg <= icmp_ln83_reg_134_pp0_iter52_reg;
        icmp_ln83_reg_134_pp0_iter54_reg <= icmp_ln83_reg_134_pp0_iter53_reg;
        icmp_ln83_reg_134_pp0_iter55_reg <= icmp_ln83_reg_134_pp0_iter54_reg;
        icmp_ln83_reg_134_pp0_iter56_reg <= icmp_ln83_reg_134_pp0_iter55_reg;
        icmp_ln83_reg_134_pp0_iter57_reg <= icmp_ln83_reg_134_pp0_iter56_reg;
        icmp_ln83_reg_134_pp0_iter58_reg <= icmp_ln83_reg_134_pp0_iter57_reg;
        icmp_ln83_reg_134_pp0_iter59_reg <= icmp_ln83_reg_134_pp0_iter58_reg;
        icmp_ln83_reg_134_pp0_iter5_reg <= icmp_ln83_reg_134_pp0_iter4_reg;
        icmp_ln83_reg_134_pp0_iter60_reg <= icmp_ln83_reg_134_pp0_iter59_reg;
        icmp_ln83_reg_134_pp0_iter61_reg <= icmp_ln83_reg_134_pp0_iter60_reg;
        icmp_ln83_reg_134_pp0_iter62_reg <= icmp_ln83_reg_134_pp0_iter61_reg;
        icmp_ln83_reg_134_pp0_iter63_reg <= icmp_ln83_reg_134_pp0_iter62_reg;
        icmp_ln83_reg_134_pp0_iter64_reg <= icmp_ln83_reg_134_pp0_iter63_reg;
        icmp_ln83_reg_134_pp0_iter65_reg <= icmp_ln83_reg_134_pp0_iter64_reg;
        icmp_ln83_reg_134_pp0_iter66_reg <= icmp_ln83_reg_134_pp0_iter65_reg;
        icmp_ln83_reg_134_pp0_iter67_reg <= icmp_ln83_reg_134_pp0_iter66_reg;
        icmp_ln83_reg_134_pp0_iter68_reg <= icmp_ln83_reg_134_pp0_iter67_reg;
        icmp_ln83_reg_134_pp0_iter69_reg <= icmp_ln83_reg_134_pp0_iter68_reg;
        icmp_ln83_reg_134_pp0_iter6_reg <= icmp_ln83_reg_134_pp0_iter5_reg;
        icmp_ln83_reg_134_pp0_iter7_reg <= icmp_ln83_reg_134_pp0_iter6_reg;
        icmp_ln83_reg_134_pp0_iter8_reg <= icmp_ln83_reg_134_pp0_iter7_reg;
        icmp_ln83_reg_134_pp0_iter9_reg <= icmp_ln83_reg_134_pp0_iter8_reg;
        icmp_ln88_reg_149_pp0_iter10_reg <= icmp_ln88_reg_149_pp0_iter9_reg;
        icmp_ln88_reg_149_pp0_iter11_reg <= icmp_ln88_reg_149_pp0_iter10_reg;
        icmp_ln88_reg_149_pp0_iter12_reg <= icmp_ln88_reg_149_pp0_iter11_reg;
        icmp_ln88_reg_149_pp0_iter13_reg <= icmp_ln88_reg_149_pp0_iter12_reg;
        icmp_ln88_reg_149_pp0_iter14_reg <= icmp_ln88_reg_149_pp0_iter13_reg;
        icmp_ln88_reg_149_pp0_iter15_reg <= icmp_ln88_reg_149_pp0_iter14_reg;
        icmp_ln88_reg_149_pp0_iter16_reg <= icmp_ln88_reg_149_pp0_iter15_reg;
        icmp_ln88_reg_149_pp0_iter17_reg <= icmp_ln88_reg_149_pp0_iter16_reg;
        icmp_ln88_reg_149_pp0_iter18_reg <= icmp_ln88_reg_149_pp0_iter17_reg;
        icmp_ln88_reg_149_pp0_iter19_reg <= icmp_ln88_reg_149_pp0_iter18_reg;
        icmp_ln88_reg_149_pp0_iter20_reg <= icmp_ln88_reg_149_pp0_iter19_reg;
        icmp_ln88_reg_149_pp0_iter21_reg <= icmp_ln88_reg_149_pp0_iter20_reg;
        icmp_ln88_reg_149_pp0_iter22_reg <= icmp_ln88_reg_149_pp0_iter21_reg;
        icmp_ln88_reg_149_pp0_iter23_reg <= icmp_ln88_reg_149_pp0_iter22_reg;
        icmp_ln88_reg_149_pp0_iter24_reg <= icmp_ln88_reg_149_pp0_iter23_reg;
        icmp_ln88_reg_149_pp0_iter25_reg <= icmp_ln88_reg_149_pp0_iter24_reg;
        icmp_ln88_reg_149_pp0_iter26_reg <= icmp_ln88_reg_149_pp0_iter25_reg;
        icmp_ln88_reg_149_pp0_iter27_reg <= icmp_ln88_reg_149_pp0_iter26_reg;
        icmp_ln88_reg_149_pp0_iter28_reg <= icmp_ln88_reg_149_pp0_iter27_reg;
        icmp_ln88_reg_149_pp0_iter29_reg <= icmp_ln88_reg_149_pp0_iter28_reg;
        icmp_ln88_reg_149_pp0_iter30_reg <= icmp_ln88_reg_149_pp0_iter29_reg;
        icmp_ln88_reg_149_pp0_iter31_reg <= icmp_ln88_reg_149_pp0_iter30_reg;
        icmp_ln88_reg_149_pp0_iter32_reg <= icmp_ln88_reg_149_pp0_iter31_reg;
        icmp_ln88_reg_149_pp0_iter33_reg <= icmp_ln88_reg_149_pp0_iter32_reg;
        icmp_ln88_reg_149_pp0_iter34_reg <= icmp_ln88_reg_149_pp0_iter33_reg;
        icmp_ln88_reg_149_pp0_iter35_reg <= icmp_ln88_reg_149_pp0_iter34_reg;
        icmp_ln88_reg_149_pp0_iter36_reg <= icmp_ln88_reg_149_pp0_iter35_reg;
        icmp_ln88_reg_149_pp0_iter37_reg <= icmp_ln88_reg_149_pp0_iter36_reg;
        icmp_ln88_reg_149_pp0_iter38_reg <= icmp_ln88_reg_149_pp0_iter37_reg;
        icmp_ln88_reg_149_pp0_iter39_reg <= icmp_ln88_reg_149_pp0_iter38_reg;
        icmp_ln88_reg_149_pp0_iter3_reg <= icmp_ln88_reg_149;
        icmp_ln88_reg_149_pp0_iter40_reg <= icmp_ln88_reg_149_pp0_iter39_reg;
        icmp_ln88_reg_149_pp0_iter41_reg <= icmp_ln88_reg_149_pp0_iter40_reg;
        icmp_ln88_reg_149_pp0_iter42_reg <= icmp_ln88_reg_149_pp0_iter41_reg;
        icmp_ln88_reg_149_pp0_iter43_reg <= icmp_ln88_reg_149_pp0_iter42_reg;
        icmp_ln88_reg_149_pp0_iter44_reg <= icmp_ln88_reg_149_pp0_iter43_reg;
        icmp_ln88_reg_149_pp0_iter45_reg <= icmp_ln88_reg_149_pp0_iter44_reg;
        icmp_ln88_reg_149_pp0_iter46_reg <= icmp_ln88_reg_149_pp0_iter45_reg;
        icmp_ln88_reg_149_pp0_iter47_reg <= icmp_ln88_reg_149_pp0_iter46_reg;
        icmp_ln88_reg_149_pp0_iter48_reg <= icmp_ln88_reg_149_pp0_iter47_reg;
        icmp_ln88_reg_149_pp0_iter49_reg <= icmp_ln88_reg_149_pp0_iter48_reg;
        icmp_ln88_reg_149_pp0_iter4_reg <= icmp_ln88_reg_149_pp0_iter3_reg;
        icmp_ln88_reg_149_pp0_iter50_reg <= icmp_ln88_reg_149_pp0_iter49_reg;
        icmp_ln88_reg_149_pp0_iter51_reg <= icmp_ln88_reg_149_pp0_iter50_reg;
        icmp_ln88_reg_149_pp0_iter52_reg <= icmp_ln88_reg_149_pp0_iter51_reg;
        icmp_ln88_reg_149_pp0_iter53_reg <= icmp_ln88_reg_149_pp0_iter52_reg;
        icmp_ln88_reg_149_pp0_iter54_reg <= icmp_ln88_reg_149_pp0_iter53_reg;
        icmp_ln88_reg_149_pp0_iter55_reg <= icmp_ln88_reg_149_pp0_iter54_reg;
        icmp_ln88_reg_149_pp0_iter56_reg <= icmp_ln88_reg_149_pp0_iter55_reg;
        icmp_ln88_reg_149_pp0_iter57_reg <= icmp_ln88_reg_149_pp0_iter56_reg;
        icmp_ln88_reg_149_pp0_iter58_reg <= icmp_ln88_reg_149_pp0_iter57_reg;
        icmp_ln88_reg_149_pp0_iter59_reg <= icmp_ln88_reg_149_pp0_iter58_reg;
        icmp_ln88_reg_149_pp0_iter5_reg <= icmp_ln88_reg_149_pp0_iter4_reg;
        icmp_ln88_reg_149_pp0_iter60_reg <= icmp_ln88_reg_149_pp0_iter59_reg;
        icmp_ln88_reg_149_pp0_iter61_reg <= icmp_ln88_reg_149_pp0_iter60_reg;
        icmp_ln88_reg_149_pp0_iter62_reg <= icmp_ln88_reg_149_pp0_iter61_reg;
        icmp_ln88_reg_149_pp0_iter63_reg <= icmp_ln88_reg_149_pp0_iter62_reg;
        icmp_ln88_reg_149_pp0_iter64_reg <= icmp_ln88_reg_149_pp0_iter63_reg;
        icmp_ln88_reg_149_pp0_iter65_reg <= icmp_ln88_reg_149_pp0_iter64_reg;
        icmp_ln88_reg_149_pp0_iter66_reg <= icmp_ln88_reg_149_pp0_iter65_reg;
        icmp_ln88_reg_149_pp0_iter67_reg <= icmp_ln88_reg_149_pp0_iter66_reg;
        icmp_ln88_reg_149_pp0_iter68_reg <= icmp_ln88_reg_149_pp0_iter67_reg;
        icmp_ln88_reg_149_pp0_iter6_reg <= icmp_ln88_reg_149_pp0_iter5_reg;
        icmp_ln88_reg_149_pp0_iter7_reg <= icmp_ln88_reg_149_pp0_iter6_reg;
        icmp_ln88_reg_149_pp0_iter8_reg <= icmp_ln88_reg_149_pp0_iter7_reg;
        icmp_ln88_reg_149_pp0_iter9_reg <= icmp_ln88_reg_149_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln83_reg_134_pp0_iter1_reg == 1'd0))) begin
        icmp_ln88_reg_149 <= icmp_ln88_fu_115_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        num_verts_read_reg_124 <= num_verts_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_reg_134 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_5_reg_143 <= oe_counts_dout;
        tmp_reg_138 <= weights_dout;
    end
end

always @ (*) begin
    if ((icmp_ln83_fu_110_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_120_ce = 1'b1;
    end else begin
        grp_fu_120_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_verts_blk_n = num_verts_empty_n;
    end else begin
        num_verts_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_verts_out_blk_n = num_verts_out_full_n;
    end else begin
        num_verts_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (num_verts_out_full_n == 1'b0) | (num_verts_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_verts_out_write = 1'b1;
    end else begin
        num_verts_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (num_verts_out_full_n == 1'b0) | (num_verts_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_verts_read = 1'b1;
    end else begin
        num_verts_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_134 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oe_counts_blk_n = oe_counts_empty_n;
    end else begin
        oe_counts_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_134 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oe_counts_read = 1'b1;
    end else begin
        oe_counts_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_134_pp0_iter69_reg == 1'd0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        out_weights_blk_n = out_weights_full_n;
    end else begin
        out_weights_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_134_pp0_iter69_reg == 1'd0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_weights_write = 1'b1;
    end else begin
        out_weights_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_134 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_blk_n = weights_empty_n;
    end else begin
        weights_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln83_reg_134 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_read = 1'b1;
    end else begin
        weights_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (num_verts_out_full_n == 1'b0) | (num_verts_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln83_fu_110_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln83_fu_110_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln83_reg_134_pp0_iter69_reg == 1'd0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (out_weights_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln83_reg_134 == 1'd0) & (oe_counts_empty_n == 1'b0)) | ((icmp_ln83_reg_134 == 1'd0) & (weights_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln83_reg_134_pp0_iter69_reg == 1'd0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (out_weights_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln83_reg_134 == 1'd0) & (oe_counts_empty_n == 1'b0)) | ((icmp_ln83_reg_134 == 1'd0) & (weights_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln83_reg_134_pp0_iter69_reg == 1'd0) & (ap_enable_reg_pp0_iter70 == 1'b1) & (out_weights_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln83_reg_134 == 1'd0) & (oe_counts_empty_n == 1'b0)) | ((icmp_ln83_reg_134 == 1'd0) & (weights_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (num_verts_out_full_n == 1'b0) | (num_verts_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln83_reg_134 == 1'd0) & (oe_counts_empty_n == 1'b0)) | ((icmp_ln83_reg_134 == 1'd0) & (weights_empty_n == 1'b0)));
end

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_pp0_stage0_iter70 = ((icmp_ln83_reg_134_pp0_iter69_reg == 1'd0) & (out_weights_full_n == 1'b0));
end

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_out_weight_reg_92 = 'bx;

assign i_5_fu_104_p2 = (i_reg_81 + 64'd1);

assign icmp_ln83_fu_110_p2 = ((i_reg_81 == num_verts_read_reg_124) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_115_p2 = ((tmp_5_reg_143 == 64'd0) ? 1'b1 : 1'b0);

assign num_verts_out_din = num_verts_dout;

assign out_weights_din = ap_phi_reg_pp0_iter70_out_weight_reg_92;

endmodule //pgrnk_div_weights
