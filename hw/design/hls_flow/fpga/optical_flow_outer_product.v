// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_outer_product (
        ap_clk,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        filtered_gradient_V_dout,
        filtered_gradient_V_empty_n,
        filtered_gradient_V_read,
        gradient_V_1_dout,
        gradient_V_1_empty_n,
        gradient_V_1_read,
        gradient_V_2_dout,
        gradient_V_2_empty_n,
        gradient_V_2_read,
        gradient_V_3_dout,
        gradient_V_3_empty_n,
        gradient_V_3_read,
        outer_product_V_val_V_din,
        outer_product_V_val_V_full_n,
        outer_product_V_val_V_write,
        outer_product_1_V_val_V_din,
        outer_product_1_V_val_V_full_n,
        outer_product_1_V_val_V_write,
        outer_product_2_V_val_V_din,
        outer_product_2_V_val_V_full_n,
        outer_product_2_V_val_V_write,
        outer_product_3_V_val_V_din,
        outer_product_3_V_val_V_full_n,
        outer_product_3_V_val_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_state7 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [95:0] filtered_gradient_V_dout;
input   filtered_gradient_V_empty_n;
output   filtered_gradient_V_read;
input  [95:0] gradient_V_1_dout;
input   gradient_V_1_empty_n;
output   gradient_V_1_read;
input  [95:0] gradient_V_2_dout;
input   gradient_V_2_empty_n;
output   gradient_V_2_read;
input  [95:0] gradient_V_3_dout;
input   gradient_V_3_empty_n;
output   gradient_V_3_read;
output  [191:0] outer_product_V_val_V_din;
input   outer_product_V_val_V_full_n;
output   outer_product_V_val_V_write;
output  [191:0] outer_product_1_V_val_V_din;
input   outer_product_1_V_val_V_full_n;
output   outer_product_1_V_val_V_write;
output  [191:0] outer_product_2_V_val_V_din;
input   outer_product_2_V_val_V_full_n;
output   outer_product_2_V_val_V_write;
output  [191:0] outer_product_3_V_val_V_din;
input   outer_product_3_V_val_V_full_n;
output   outer_product_3_V_val_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg filtered_gradient_V_read;
reg gradient_V_1_read;
reg gradient_V_2_read;
reg gradient_V_3_read;
reg outer_product_V_val_V_write;
reg outer_product_1_V_val_V_write;
reg outer_product_2_V_val_V_write;
reg outer_product_3_V_val_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    filtered_gradient_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln305_reg_874;
reg    gradient_V_1_blk_n;
reg    gradient_V_2_blk_n;
reg    gradient_V_3_blk_n;
reg    outer_product_V_val_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln305_reg_874_pp0_iter3_reg;
reg    outer_product_1_V_val_V_blk_n;
reg    outer_product_2_V_val_V_blk_n;
reg    outer_product_3_V_val_V_blk_n;
reg   [17:0] indvar_flatten_reg_130;
wire   [17:0] add_ln305_fu_141_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln305_fu_147_p2;
reg   [0:0] icmp_ln305_reg_874_pp0_iter1_reg;
reg   [0:0] icmp_ln305_reg_874_pp0_iter2_reg;
wire  signed [35:0] sext_ln1115_fu_183_p1;
wire  signed [35:0] sext_ln1115_1_fu_187_p1;
wire  signed [35:0] sext_ln1115_2_fu_191_p1;
wire  signed [35:0] sext_ln1115_3_fu_225_p1;
wire  signed [35:0] sext_ln1115_4_fu_229_p1;
wire  signed [35:0] sext_ln1115_5_fu_233_p1;
wire  signed [35:0] sext_ln1115_6_fu_267_p1;
wire  signed [35:0] sext_ln1115_7_fu_271_p1;
wire  signed [35:0] sext_ln1115_8_fu_275_p1;
wire  signed [35:0] sext_ln1115_9_fu_309_p1;
wire  signed [35:0] sext_ln1115_10_fu_313_p1;
wire  signed [35:0] sext_ln1115_11_fu_317_p1;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_01001;
wire   [17:0] r_V_fu_153_p4;
wire   [17:0] r_V_41_fu_163_p4;
wire   [17:0] r_V_1_fu_173_p4;
wire   [17:0] r_V_47_fu_195_p4;
wire   [17:0] r_V_2_fu_205_p4;
wire   [17:0] r_V_3_fu_215_p4;
wire   [17:0] r_V_54_fu_237_p4;
wire   [17:0] r_V_4_fu_247_p4;
wire   [17:0] r_V_5_fu_257_p4;
wire   [17:0] r_V_61_fu_279_p4;
wire   [17:0] r_V_6_fu_289_p4;
wire   [17:0] r_V_7_fu_299_p4;
wire  signed [35:0] grp_fu_701_p2;
wire   [30:0] out_fu_321_p4;
wire  signed [35:0] grp_fu_708_p2;
wire   [30:0] out_1_fu_334_p4;
wire  signed [35:0] grp_fu_715_p2;
wire   [30:0] out_2_fu_347_p4;
wire  signed [35:0] grp_fu_722_p2;
wire   [30:0] out_3_fu_360_p4;
wire  signed [35:0] grp_fu_729_p2;
wire   [30:0] out_4_fu_373_p4;
wire  signed [35:0] grp_fu_736_p2;
wire   [30:0] trunc_ln_fu_386_p4;
wire  signed [31:0] sext_ln708_4_fu_382_p1;
wire  signed [31:0] sext_ln708_3_fu_369_p1;
wire  signed [31:0] sext_ln708_2_fu_356_p1;
wire  signed [31:0] sext_ln708_1_fu_343_p1;
wire  signed [31:0] sext_ln708_fu_330_p1;
wire   [190:0] tmp_4_fu_395_p7;
wire  signed [35:0] grp_fu_743_p2;
wire   [30:0] out_5_fu_416_p4;
wire  signed [35:0] grp_fu_750_p2;
wire   [30:0] out_6_fu_429_p4;
wire  signed [35:0] grp_fu_757_p2;
wire   [30:0] out_7_fu_442_p4;
wire  signed [35:0] grp_fu_764_p2;
wire   [30:0] out_8_fu_455_p4;
wire  signed [35:0] grp_fu_771_p2;
wire   [30:0] out_9_fu_468_p4;
wire  signed [35:0] grp_fu_778_p2;
wire   [30:0] trunc_ln708_s_fu_481_p4;
wire  signed [31:0] sext_ln708_9_fu_477_p1;
wire  signed [31:0] sext_ln708_8_fu_464_p1;
wire  signed [31:0] sext_ln708_7_fu_451_p1;
wire  signed [31:0] sext_ln708_6_fu_438_p1;
wire  signed [31:0] sext_ln708_5_fu_425_p1;
wire   [190:0] tmp_fu_490_p7;
wire  signed [35:0] grp_fu_785_p2;
wire   [30:0] out_10_fu_511_p4;
wire  signed [35:0] grp_fu_792_p2;
wire   [30:0] out_11_fu_524_p4;
wire  signed [35:0] grp_fu_799_p2;
wire   [30:0] out_12_fu_537_p4;
wire  signed [35:0] grp_fu_806_p2;
wire   [30:0] out_13_fu_550_p4;
wire  signed [35:0] grp_fu_813_p2;
wire   [30:0] out_14_fu_563_p4;
wire  signed [35:0] grp_fu_820_p2;
wire   [30:0] trunc_ln708_1_fu_576_p4;
wire  signed [31:0] sext_ln708_14_fu_572_p1;
wire  signed [31:0] sext_ln708_13_fu_559_p1;
wire  signed [31:0] sext_ln708_12_fu_546_p1;
wire  signed [31:0] sext_ln708_11_fu_533_p1;
wire  signed [31:0] sext_ln708_10_fu_520_p1;
wire   [190:0] tmp_5_fu_585_p7;
wire  signed [35:0] grp_fu_827_p2;
wire   [30:0] out_15_fu_606_p4;
wire  signed [35:0] grp_fu_834_p2;
wire   [30:0] out_16_fu_619_p4;
wire  signed [35:0] grp_fu_841_p2;
wire   [30:0] out_17_fu_632_p4;
wire  signed [35:0] grp_fu_848_p2;
wire   [30:0] out_18_fu_645_p4;
wire  signed [35:0] grp_fu_855_p2;
wire   [30:0] out_19_fu_658_p4;
wire  signed [35:0] grp_fu_862_p2;
wire   [30:0] trunc_ln708_2_fu_671_p4;
wire  signed [31:0] sext_ln708_19_fu_667_p1;
wire  signed [31:0] sext_ln708_18_fu_654_p1;
wire  signed [31:0] sext_ln708_17_fu_641_p1;
wire  signed [31:0] sext_ln708_16_fu_628_p1;
wire  signed [31:0] sext_ln708_15_fu_615_p1;
wire   [190:0] tmp_6_fu_680_p7;
wire  signed [17:0] grp_fu_701_p0;
wire  signed [17:0] grp_fu_701_p1;
wire  signed [17:0] grp_fu_708_p0;
wire  signed [17:0] grp_fu_708_p1;
wire  signed [17:0] grp_fu_715_p0;
wire  signed [17:0] grp_fu_715_p1;
wire  signed [17:0] grp_fu_722_p0;
wire  signed [17:0] grp_fu_722_p1;
wire  signed [17:0] grp_fu_729_p0;
wire  signed [17:0] grp_fu_729_p1;
wire  signed [17:0] grp_fu_736_p0;
wire  signed [17:0] grp_fu_736_p1;
wire  signed [17:0] grp_fu_743_p0;
wire  signed [17:0] grp_fu_743_p1;
wire  signed [17:0] grp_fu_750_p0;
wire  signed [17:0] grp_fu_750_p1;
wire  signed [17:0] grp_fu_757_p0;
wire  signed [17:0] grp_fu_757_p1;
wire  signed [17:0] grp_fu_764_p0;
wire  signed [17:0] grp_fu_764_p1;
wire  signed [17:0] grp_fu_771_p0;
wire  signed [17:0] grp_fu_771_p1;
wire  signed [17:0] grp_fu_778_p0;
wire  signed [17:0] grp_fu_778_p1;
wire  signed [17:0] grp_fu_785_p0;
wire  signed [17:0] grp_fu_785_p1;
wire  signed [17:0] grp_fu_792_p0;
wire  signed [17:0] grp_fu_792_p1;
wire  signed [17:0] grp_fu_799_p0;
wire  signed [17:0] grp_fu_799_p1;
wire  signed [17:0] grp_fu_806_p0;
wire  signed [17:0] grp_fu_806_p1;
wire  signed [17:0] grp_fu_813_p0;
wire  signed [17:0] grp_fu_813_p1;
wire  signed [17:0] grp_fu_820_p0;
wire  signed [17:0] grp_fu_820_p1;
wire  signed [17:0] grp_fu_827_p0;
wire  signed [17:0] grp_fu_827_p1;
wire  signed [17:0] grp_fu_834_p0;
wire  signed [17:0] grp_fu_834_p1;
wire  signed [17:0] grp_fu_841_p0;
wire  signed [17:0] grp_fu_841_p1;
wire  signed [17:0] grp_fu_848_p0;
wire  signed [17:0] grp_fu_848_p1;
wire  signed [17:0] grp_fu_855_p0;
wire  signed [17:0] grp_fu_855_p1;
wire  signed [17:0] grp_fu_862_p0;
wire  signed [17:0] grp_fu_862_p1;
reg    grp_fu_701_ce;
reg    grp_fu_708_ce;
reg    grp_fu_715_ce;
reg    grp_fu_722_ce;
reg    grp_fu_729_ce;
reg    grp_fu_736_ce;
reg    grp_fu_743_ce;
reg    grp_fu_750_ce;
reg    grp_fu_757_ce;
reg    grp_fu_764_ce;
reg    grp_fu_771_ce;
reg    grp_fu_778_ce;
reg    grp_fu_785_ce;
reg    grp_fu_792_ce;
reg    grp_fu_799_ce;
reg    grp_fu_806_ce;
reg    grp_fu_813_ce;
reg    grp_fu_820_ce;
reg    grp_fu_827_ce;
reg    grp_fu_834_ce;
reg    grp_fu_841_ce;
reg    grp_fu_848_ce;
reg    grp_fu_855_ce;
reg    grp_fu_862_ce;
wire    ap_CS_fsm_state8;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U277(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_701_p0),
    .din1(grp_fu_701_p1),
    .ce(grp_fu_701_ce),
    .dout(grp_fu_701_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U278(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_708_p0),
    .din1(grp_fu_708_p1),
    .ce(grp_fu_708_ce),
    .dout(grp_fu_708_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U279(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_715_p0),
    .din1(grp_fu_715_p1),
    .ce(grp_fu_715_ce),
    .dout(grp_fu_715_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U280(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_722_p0),
    .din1(grp_fu_722_p1),
    .ce(grp_fu_722_ce),
    .dout(grp_fu_722_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U281(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_729_p0),
    .din1(grp_fu_729_p1),
    .ce(grp_fu_729_ce),
    .dout(grp_fu_729_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U282(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_736_p0),
    .din1(grp_fu_736_p1),
    .ce(grp_fu_736_ce),
    .dout(grp_fu_736_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U283(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_743_p0),
    .din1(grp_fu_743_p1),
    .ce(grp_fu_743_ce),
    .dout(grp_fu_743_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U284(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_750_p0),
    .din1(grp_fu_750_p1),
    .ce(grp_fu_750_ce),
    .dout(grp_fu_750_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U285(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_757_p0),
    .din1(grp_fu_757_p1),
    .ce(grp_fu_757_ce),
    .dout(grp_fu_757_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U286(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_764_p0),
    .din1(grp_fu_764_p1),
    .ce(grp_fu_764_ce),
    .dout(grp_fu_764_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U287(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_771_p0),
    .din1(grp_fu_771_p1),
    .ce(grp_fu_771_ce),
    .dout(grp_fu_771_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U288(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_778_p0),
    .din1(grp_fu_778_p1),
    .ce(grp_fu_778_ce),
    .dout(grp_fu_778_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U289(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_785_p0),
    .din1(grp_fu_785_p1),
    .ce(grp_fu_785_ce),
    .dout(grp_fu_785_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U290(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_792_p0),
    .din1(grp_fu_792_p1),
    .ce(grp_fu_792_ce),
    .dout(grp_fu_792_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U291(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_799_p0),
    .din1(grp_fu_799_p1),
    .ce(grp_fu_799_ce),
    .dout(grp_fu_799_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U292(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_806_p0),
    .din1(grp_fu_806_p1),
    .ce(grp_fu_806_ce),
    .dout(grp_fu_806_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U293(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_813_p0),
    .din1(grp_fu_813_p1),
    .ce(grp_fu_813_ce),
    .dout(grp_fu_813_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U294(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_820_p0),
    .din1(grp_fu_820_p1),
    .ce(grp_fu_820_ce),
    .dout(grp_fu_820_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U295(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_827_p0),
    .din1(grp_fu_827_p1),
    .ce(grp_fu_827_ce),
    .dout(grp_fu_827_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U296(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_834_p0),
    .din1(grp_fu_834_p1),
    .ce(grp_fu_834_ce),
    .dout(grp_fu_834_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U297(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_841_p0),
    .din1(grp_fu_841_p1),
    .ce(grp_fu_841_ce),
    .dout(grp_fu_841_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U298(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_848_p0),
    .din1(grp_fu_848_p1),
    .ce(grp_fu_848_ce),
    .dout(grp_fu_848_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U299(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_855_p0),
    .din1(grp_fu_855_p1),
    .ce(grp_fu_855_ce),
    .dout(grp_fu_855_p2)
);

optical_flow_mul_mul_18s_18s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
mul_mul_18s_18s_36_4_1_U300(
    .clk(ap_clk),
    .reset(1'b0),
    .din0(grp_fu_862_p0),
    .din1(grp_fu_862_p1),
    .ce(grp_fu_862_ce),
    .dout(grp_fu_862_p2)
);

always @ (posedge ap_clk) begin
    ap_CS_fsm <= ap_NS_fsm;
end

always @ (posedge ap_clk) begin
    if ((ap_continue == 1'b1)) begin
        ap_done_reg <= 1'b0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done_reg <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_enable_reg_pp0_iter0 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
        if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b1 == 1'b1)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln305_fu_147_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_130 <= add_ln305_fu_141_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_130 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
        start_once_reg <= 1'b1;
    end else if ((internal_ap_ready == 1'b1)) begin
        start_once_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln305_reg_874 <= icmp_ln305_fu_147_p2;
        icmp_ln305_reg_874_pp0_iter1_reg <= icmp_ln305_reg_874;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln305_reg_874_pp0_iter2_reg <= icmp_ln305_reg_874_pp0_iter1_reg;
        icmp_ln305_reg_874_pp0_iter3_reg <= icmp_ln305_reg_874_pp0_iter2_reg;
    end
end

always @ (*) begin
    if ((icmp_ln305_fu_147_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filtered_gradient_V_blk_n = filtered_gradient_V_empty_n;
    end else begin
        filtered_gradient_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filtered_gradient_V_read = 1'b1;
    end else begin
        filtered_gradient_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_V_1_blk_n = gradient_V_1_empty_n;
    end else begin
        gradient_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_V_1_read = 1'b1;
    end else begin
        gradient_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_V_2_blk_n = gradient_V_2_empty_n;
    end else begin
        gradient_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_V_2_read = 1'b1;
    end else begin
        gradient_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_V_3_blk_n = gradient_V_3_empty_n;
    end else begin
        gradient_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_V_3_read = 1'b1;
    end else begin
        gradient_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_701_ce = 1'b1;
    end else begin
        grp_fu_701_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_708_ce = 1'b1;
    end else begin
        grp_fu_708_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_715_ce = 1'b1;
    end else begin
        grp_fu_715_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_722_ce = 1'b1;
    end else begin
        grp_fu_722_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_729_ce = 1'b1;
    end else begin
        grp_fu_729_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_736_ce = 1'b1;
    end else begin
        grp_fu_736_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_743_ce = 1'b1;
    end else begin
        grp_fu_743_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_750_ce = 1'b1;
    end else begin
        grp_fu_750_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_757_ce = 1'b1;
    end else begin
        grp_fu_757_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_764_ce = 1'b1;
    end else begin
        grp_fu_764_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_771_ce = 1'b1;
    end else begin
        grp_fu_771_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_778_ce = 1'b1;
    end else begin
        grp_fu_778_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_785_ce = 1'b1;
    end else begin
        grp_fu_785_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_792_ce = 1'b1;
    end else begin
        grp_fu_792_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_799_ce = 1'b1;
    end else begin
        grp_fu_799_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_806_ce = 1'b1;
    end else begin
        grp_fu_806_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_813_ce = 1'b1;
    end else begin
        grp_fu_813_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_820_ce = 1'b1;
    end else begin
        grp_fu_820_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_827_ce = 1'b1;
    end else begin
        grp_fu_827_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_834_ce = 1'b1;
    end else begin
        grp_fu_834_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_841_ce = 1'b1;
    end else begin
        grp_fu_841_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_848_ce = 1'b1;
    end else begin
        grp_fu_848_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_855_ce = 1'b1;
    end else begin
        grp_fu_855_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_862_ce = 1'b1;
    end else begin
        grp_fu_862_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outer_product_1_V_val_V_blk_n = outer_product_1_V_val_V_full_n;
    end else begin
        outer_product_1_V_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outer_product_1_V_val_V_write = 1'b1;
    end else begin
        outer_product_1_V_val_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outer_product_2_V_val_V_blk_n = outer_product_2_V_val_V_full_n;
    end else begin
        outer_product_2_V_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outer_product_2_V_val_V_write = 1'b1;
    end else begin
        outer_product_2_V_val_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outer_product_3_V_val_V_blk_n = outer_product_3_V_val_V_full_n;
    end else begin
        outer_product_3_V_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outer_product_3_V_val_V_write = 1'b1;
    end else begin
        outer_product_3_V_val_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outer_product_V_val_V_blk_n = outer_product_V_val_V_full_n;
    end else begin
        outer_product_V_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outer_product_V_val_V_write = 1'b1;
    end else begin
        outer_product_V_val_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln305_fu_147_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln305_fu_147_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln305_fu_141_p2 = (indvar_flatten_reg_130 + 18'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_3_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_2_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_1_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_V_val_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln305_reg_874 == 1'd0) & (gradient_V_3_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_2_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_1_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (filtered_gradient_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_3_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_2_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_1_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_V_val_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln305_reg_874 == 1'd0) & (gradient_V_3_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_2_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_1_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (filtered_gradient_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_3_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_2_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_1_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_V_val_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln305_reg_874 == 1'd0) & (gradient_V_3_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_2_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_1_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (filtered_gradient_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln305_reg_874 == 1'd0) & (gradient_V_3_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_2_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (gradient_V_1_empty_n == 1'b0)) | ((icmp_ln305_reg_874 == 1'd0) & (filtered_gradient_V_empty_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = (((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_3_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_2_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_1_V_val_V_full_n == 1'b0)) | ((icmp_ln305_reg_874_pp0_iter3_reg == 1'd0) & (outer_product_V_val_V_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_fu_701_p0 = sext_ln1115_fu_183_p1;

assign grp_fu_701_p1 = sext_ln1115_fu_183_p1;

assign grp_fu_708_p0 = sext_ln1115_1_fu_187_p1;

assign grp_fu_708_p1 = sext_ln1115_1_fu_187_p1;

assign grp_fu_715_p0 = sext_ln1115_2_fu_191_p1;

assign grp_fu_715_p1 = sext_ln1115_2_fu_191_p1;

assign grp_fu_722_p0 = sext_ln1115_fu_183_p1;

assign grp_fu_722_p1 = sext_ln1115_1_fu_187_p1;

assign grp_fu_729_p0 = sext_ln1115_fu_183_p1;

assign grp_fu_729_p1 = sext_ln1115_2_fu_191_p1;

assign grp_fu_736_p0 = sext_ln1115_1_fu_187_p1;

assign grp_fu_736_p1 = sext_ln1115_2_fu_191_p1;

assign grp_fu_743_p0 = sext_ln1115_3_fu_225_p1;

assign grp_fu_743_p1 = sext_ln1115_3_fu_225_p1;

assign grp_fu_750_p0 = sext_ln1115_4_fu_229_p1;

assign grp_fu_750_p1 = sext_ln1115_4_fu_229_p1;

assign grp_fu_757_p0 = sext_ln1115_5_fu_233_p1;

assign grp_fu_757_p1 = sext_ln1115_5_fu_233_p1;

assign grp_fu_764_p0 = sext_ln1115_3_fu_225_p1;

assign grp_fu_764_p1 = sext_ln1115_4_fu_229_p1;

assign grp_fu_771_p0 = sext_ln1115_3_fu_225_p1;

assign grp_fu_771_p1 = sext_ln1115_5_fu_233_p1;

assign grp_fu_778_p0 = sext_ln1115_4_fu_229_p1;

assign grp_fu_778_p1 = sext_ln1115_5_fu_233_p1;

assign grp_fu_785_p0 = sext_ln1115_6_fu_267_p1;

assign grp_fu_785_p1 = sext_ln1115_6_fu_267_p1;

assign grp_fu_792_p0 = sext_ln1115_7_fu_271_p1;

assign grp_fu_792_p1 = sext_ln1115_7_fu_271_p1;

assign grp_fu_799_p0 = sext_ln1115_8_fu_275_p1;

assign grp_fu_799_p1 = sext_ln1115_8_fu_275_p1;

assign grp_fu_806_p0 = sext_ln1115_6_fu_267_p1;

assign grp_fu_806_p1 = sext_ln1115_7_fu_271_p1;

assign grp_fu_813_p0 = sext_ln1115_6_fu_267_p1;

assign grp_fu_813_p1 = sext_ln1115_8_fu_275_p1;

assign grp_fu_820_p0 = sext_ln1115_7_fu_271_p1;

assign grp_fu_820_p1 = sext_ln1115_8_fu_275_p1;

assign grp_fu_827_p0 = sext_ln1115_9_fu_309_p1;

assign grp_fu_827_p1 = sext_ln1115_9_fu_309_p1;

assign grp_fu_834_p0 = sext_ln1115_10_fu_313_p1;

assign grp_fu_834_p1 = sext_ln1115_10_fu_313_p1;

assign grp_fu_841_p0 = sext_ln1115_11_fu_317_p1;

assign grp_fu_841_p1 = sext_ln1115_11_fu_317_p1;

assign grp_fu_848_p0 = sext_ln1115_9_fu_309_p1;

assign grp_fu_848_p1 = sext_ln1115_10_fu_313_p1;

assign grp_fu_855_p0 = sext_ln1115_9_fu_309_p1;

assign grp_fu_855_p1 = sext_ln1115_11_fu_317_p1;

assign grp_fu_862_p0 = sext_ln1115_10_fu_313_p1;

assign grp_fu_862_p1 = sext_ln1115_11_fu_317_p1;

assign icmp_ln305_fu_147_p2 = ((indvar_flatten_reg_130 == 18'd131072) ? 1'b1 : 1'b0);

assign out_10_fu_511_p4 = {{grp_fu_785_p2[35:5]}};

assign out_11_fu_524_p4 = {{grp_fu_792_p2[35:5]}};

assign out_12_fu_537_p4 = {{grp_fu_799_p2[35:5]}};

assign out_13_fu_550_p4 = {{grp_fu_806_p2[35:5]}};

assign out_14_fu_563_p4 = {{grp_fu_813_p2[35:5]}};

assign out_15_fu_606_p4 = {{grp_fu_827_p2[35:5]}};

assign out_16_fu_619_p4 = {{grp_fu_834_p2[35:5]}};

assign out_17_fu_632_p4 = {{grp_fu_841_p2[35:5]}};

assign out_18_fu_645_p4 = {{grp_fu_848_p2[35:5]}};

assign out_19_fu_658_p4 = {{grp_fu_855_p2[35:5]}};

assign out_1_fu_334_p4 = {{grp_fu_708_p2[35:5]}};

assign out_2_fu_347_p4 = {{grp_fu_715_p2[35:5]}};

assign out_3_fu_360_p4 = {{grp_fu_722_p2[35:5]}};

assign out_4_fu_373_p4 = {{grp_fu_729_p2[35:5]}};

assign out_5_fu_416_p4 = {{grp_fu_743_p2[35:5]}};

assign out_6_fu_429_p4 = {{grp_fu_750_p2[35:5]}};

assign out_7_fu_442_p4 = {{grp_fu_757_p2[35:5]}};

assign out_8_fu_455_p4 = {{grp_fu_764_p2[35:5]}};

assign out_9_fu_468_p4 = {{grp_fu_771_p2[35:5]}};

assign out_fu_321_p4 = {{grp_fu_701_p2[35:5]}};

assign outer_product_1_V_val_V_din = $signed(tmp_fu_490_p7);

assign outer_product_2_V_val_V_din = $signed(tmp_5_fu_585_p7);

assign outer_product_3_V_val_V_din = $signed(tmp_6_fu_680_p7);

assign outer_product_V_val_V_din = $signed(tmp_4_fu_395_p7);

assign r_V_1_fu_173_p4 = {{filtered_gradient_V_dout[95:78]}};

assign r_V_2_fu_205_p4 = {{gradient_V_1_dout[63:46]}};

assign r_V_3_fu_215_p4 = {{gradient_V_1_dout[95:78]}};

assign r_V_41_fu_163_p4 = {{filtered_gradient_V_dout[63:46]}};

assign r_V_47_fu_195_p4 = {{gradient_V_1_dout[31:14]}};

assign r_V_4_fu_247_p4 = {{gradient_V_2_dout[63:46]}};

assign r_V_54_fu_237_p4 = {{gradient_V_2_dout[31:14]}};

assign r_V_5_fu_257_p4 = {{gradient_V_2_dout[95:78]}};

assign r_V_61_fu_279_p4 = {{gradient_V_3_dout[31:14]}};

assign r_V_6_fu_289_p4 = {{gradient_V_3_dout[63:46]}};

assign r_V_7_fu_299_p4 = {{gradient_V_3_dout[95:78]}};

assign r_V_fu_153_p4 = {{filtered_gradient_V_dout[31:14]}};

assign sext_ln1115_10_fu_313_p1 = $signed(r_V_6_fu_289_p4);

assign sext_ln1115_11_fu_317_p1 = $signed(r_V_7_fu_299_p4);

assign sext_ln1115_1_fu_187_p1 = $signed(r_V_41_fu_163_p4);

assign sext_ln1115_2_fu_191_p1 = $signed(r_V_1_fu_173_p4);

assign sext_ln1115_3_fu_225_p1 = $signed(r_V_47_fu_195_p4);

assign sext_ln1115_4_fu_229_p1 = $signed(r_V_2_fu_205_p4);

assign sext_ln1115_5_fu_233_p1 = $signed(r_V_3_fu_215_p4);

assign sext_ln1115_6_fu_267_p1 = $signed(r_V_54_fu_237_p4);

assign sext_ln1115_7_fu_271_p1 = $signed(r_V_4_fu_247_p4);

assign sext_ln1115_8_fu_275_p1 = $signed(r_V_5_fu_257_p4);

assign sext_ln1115_9_fu_309_p1 = $signed(r_V_61_fu_279_p4);

assign sext_ln1115_fu_183_p1 = $signed(r_V_fu_153_p4);

assign sext_ln708_10_fu_520_p1 = $signed(out_10_fu_511_p4);

assign sext_ln708_11_fu_533_p1 = $signed(out_11_fu_524_p4);

assign sext_ln708_12_fu_546_p1 = $signed(out_12_fu_537_p4);

assign sext_ln708_13_fu_559_p1 = $signed(out_13_fu_550_p4);

assign sext_ln708_14_fu_572_p1 = $signed(out_14_fu_563_p4);

assign sext_ln708_15_fu_615_p1 = $signed(out_15_fu_606_p4);

assign sext_ln708_16_fu_628_p1 = $signed(out_16_fu_619_p4);

assign sext_ln708_17_fu_641_p1 = $signed(out_17_fu_632_p4);

assign sext_ln708_18_fu_654_p1 = $signed(out_18_fu_645_p4);

assign sext_ln708_19_fu_667_p1 = $signed(out_19_fu_658_p4);

assign sext_ln708_1_fu_343_p1 = $signed(out_1_fu_334_p4);

assign sext_ln708_2_fu_356_p1 = $signed(out_2_fu_347_p4);

assign sext_ln708_3_fu_369_p1 = $signed(out_3_fu_360_p4);

assign sext_ln708_4_fu_382_p1 = $signed(out_4_fu_373_p4);

assign sext_ln708_5_fu_425_p1 = $signed(out_5_fu_416_p4);

assign sext_ln708_6_fu_438_p1 = $signed(out_6_fu_429_p4);

assign sext_ln708_7_fu_451_p1 = $signed(out_7_fu_442_p4);

assign sext_ln708_8_fu_464_p1 = $signed(out_8_fu_455_p4);

assign sext_ln708_9_fu_477_p1 = $signed(out_9_fu_468_p4);

assign sext_ln708_fu_330_p1 = $signed(out_fu_321_p4);

assign start_out = real_start;

assign tmp_4_fu_395_p7 = {{{{{{trunc_ln_fu_386_p4}, {sext_ln708_4_fu_382_p1}}, {sext_ln708_3_fu_369_p1}}, {sext_ln708_2_fu_356_p1}}, {sext_ln708_1_fu_343_p1}}, {sext_ln708_fu_330_p1}};

assign tmp_5_fu_585_p7 = {{{{{{trunc_ln708_1_fu_576_p4}, {sext_ln708_14_fu_572_p1}}, {sext_ln708_13_fu_559_p1}}, {sext_ln708_12_fu_546_p1}}, {sext_ln708_11_fu_533_p1}}, {sext_ln708_10_fu_520_p1}};

assign tmp_6_fu_680_p7 = {{{{{{trunc_ln708_2_fu_671_p4}, {sext_ln708_19_fu_667_p1}}, {sext_ln708_18_fu_654_p1}}, {sext_ln708_17_fu_641_p1}}, {sext_ln708_16_fu_628_p1}}, {sext_ln708_15_fu_615_p1}};

assign tmp_fu_490_p7 = {{{{{{trunc_ln708_s_fu_481_p4}, {sext_ln708_9_fu_477_p1}}, {sext_ln708_8_fu_464_p1}}, {sext_ln708_7_fu_451_p1}}, {sext_ln708_6_fu_438_p1}}, {sext_ln708_5_fu_425_p1}};

assign trunc_ln708_1_fu_576_p4 = {{grp_fu_820_p2[35:5]}};

assign trunc_ln708_2_fu_671_p4 = {{grp_fu_862_p2[35:5]}};

assign trunc_ln708_s_fu_481_p4 = {{grp_fu_778_p2[35:5]}};

assign trunc_ln_fu_386_p4 = {{grp_fu_736_p2[35:5]}};

endmodule //optical_flow_outer_product
